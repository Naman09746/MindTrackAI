{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":13059085,"sourceType":"datasetVersion","datasetId":8269732}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import pandas as pd ","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"mental_classification= pd.read_csv(\"/kaggle/input/mental-health-classification/Mental Health Classification.csv\")\nmental_classification.sample(10)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"mental_classification.shape","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"mental_classification.describe()","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"mental_classification.dtypes","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!pip install --upgrade --force-reinstall scikit-learn\n","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!pip install --upgrade --force-reinstall scikit-learn==1.3.2 imbalanced-learn==0.11.0\n","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Robust depression classification pipeline (single script)\n# - Imputation inside pipeline (no data leakage)\n# - SMOTE applied after preprocessing (via imblearn pipeline)\n# - LabelEncoder for target\n# - SHAP summary (sample-limited) with graceful fallback\n# - Saves pipeline, label encoder, and metadata\n\nimport os\nimport json\nimport time\nfrom pathlib import Path\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, cross_val_score\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import (classification_report, confusion_matrix, accuracy_score,\n                             f1_score, precision_recall_fscore_support, balanced_accuracy_score)\nfrom sklearn.metrics import ConfusionMatrixDisplay\n\n# xgboost\nfrom xgboost import XGBClassifier\n\n# imblearn (SMOTE + pipeline)\ntry:\n    from imblearn.over_sampling import SMOTE\n    from imblearn.pipeline import Pipeline as ImbPipeline\n    IMBLEARN_AVAILABLE = True\nexcept Exception:\n    SMOTE = None\n    ImbPipeline = None\n    IMBLEARN_AVAILABLE = False\n\n# shap (optional)\ntry:\n    import shap\n    SHAP_AVAILABLE = True\nexcept Exception:\n    shap = None\n    SHAP_AVAILABLE = False\n\nimport joblib\n\n# ---------------- configuration ----------------\nDATA_PATH = \"/kaggle/input/mental-health-classification/Mental Health Classification.csv\"      # <-- change if needed\nTARGET_COL = \"Depression_Type\"\nOUT_DIR = Path(\"artifacts\")\nOUT_DIR.mkdir(exist_ok=True)\n\n# ---------------- 1. Load ----------------\nprint(\"Loading dataset:\", DATA_PATH)\ndf = pd.read_csv(DATA_PATH)\nprint(\"Data shape:\", df.shape)\nprint(df.head(3))\n\n# ---------------- 2. Basic checks ----------------\nif TARGET_COL not in df.columns:\n    raise ValueError(f\"Target column '{TARGET_COL}' not found. Columns: {df.columns.tolist()}\")\n\n# show target distribution\nprint(\"\\nTarget distribution:\")\nprint(df[TARGET_COL].value_counts(dropna=False))\n\n# ---------------- 3. Target encoding (LabelEncoder) ----------------\nle = LabelEncoder()\n# convert NaN to string 'MISSING' to avoid NaN->int problem (you can choose to drop instead)\ndf[TARGET_COL] = df[TARGET_COL].fillna(\"MISSING\").astype(str)\ny = le.fit_transform(df[TARGET_COL])\nclass_names = list(le.classes_)\nprint(\"\\nEncoded target classes:\", class_names)\n\n# ---------------- 4. Feature detection (numeric vs categorical) ----------------\nX = df.drop(columns=[TARGET_COL]).copy()\n\n# strategy:\n# - object / category dtype -> categorical\n# - numeric dtype -> numeric\n# - numeric but low-cardinality (<= 10 unique) -> treat as categorical (common for codes)\nnumeric_cols = X.select_dtypes(include=[np.number]).columns.tolist()\ncat_cols = X.select_dtypes(include=['object', 'category']).columns.tolist()\n\n# consider low-cardinality numeric as categorical\nlow_card_threshold = 10\nfor col in numeric_cols[:]:  # iterate over a copy\n    # if the numeric col has few unique values and looks integer-like, treat as categorical\n    if X[col].nunique(dropna=True) <= low_card_threshold and np.all(np.mod(X[col].dropna(), 1) == 0):\n        cat_cols.append(col)\n        numeric_cols.remove(col)\n\n# final lists\nprint(\"\\nNumeric columns:\", numeric_cols)\nprint(\"Categorical columns:\", cat_cols)\n\n# ---------------- 5. Train/test split (stratified) ----------------\nX_train_raw, X_test_raw, y_train, y_test = train_test_split(\n    X, y, test_size=0.20, random_state=42, stratify=y\n)\nprint(\"\\nTrain / Test shapes:\", X_train_raw.shape, X_test_raw.shape)\n\n# ---------------- 6. Preprocessor (imputation inside) ----------------\n# numeric: median imputation + standard scaling\nnumeric_transformer = Pipeline(steps=[\n    (\"imputer\", SimpleImputer(strategy=\"median\")),\n    (\"scaler\", StandardScaler())\n])\n\n# categorical: most frequent imputation + one-hot (handle_unknown='ignore')\ncategorical_transformer = Pipeline(steps=[\n    (\"imputer\", SimpleImputer(strategy=\"most_frequent\")),\n    (\"onehot\", OneHotEncoder(handle_unknown=\"ignore\", sparse=False))\n])\n\ntransformers = []\nif numeric_cols:\n    transformers.append((\"num\", numeric_transformer, numeric_cols))\nif cat_cols:\n    transformers.append((\"cat\", categorical_transformer, cat_cols))\n\nif transformers:\n    preprocessor = ColumnTransformer(transformers=transformers, remainder=\"drop\")\nelse:\n    # no features (shouldn't happen) -> passthrough\n    preprocessor = \"passthrough\"\n\n# ---------------- 7. Classifier & pipeline ----------------\nbase_clf = XGBClassifier(\n    n_estimators=200,\n    learning_rate=0.05,\n    max_depth=6,\n    subsample=0.8,\n    colsample_bytree=0.8,\n    random_state=42,\n    use_label_encoder=False,\n    eval_metric=\"mlogloss\"\n)\n\n# prefer imblearn Pipeline so SMOTE happens after preprocessor (on numeric array)\nif IMBLEARN_AVAILABLE:\n    pipeline = ImbPipeline(steps=[\n        (\"preprocessor\", preprocessor),\n        (\"smote\", SMOTE(random_state=42)),\n        (\"classifier\", base_clf)\n    ])\n    print(\"\\nUsing imblearn pipeline (SMOTE will be applied after preprocessing).\")\nelse:\n    # fallback: preprocessor then we will resample manually on transformed X_train\n    pipeline = Pipeline(steps=[\n        (\"preprocessor\", preprocessor),\n        (\"classifier\", base_clf)\n    ])\n    print(\"\\nImblearn not available: will preprocess then apply SMOTE manually (if desired).\")\n\n# ---------------- 8. Cross-validation baseline (on pipeline without fitting) ----------------\nprint(\"\\nRunning quick cross-validation baseline (f1_macro, balanced_accuracy)...\")\ncv = StratifiedKFold(n_splits=3, shuffle=True, random_state=42)\n\nscoring = {}\n# wrap cross_val_score in try in case pipeline can't be used directly with imblearn in cross_val\ntry:\n    f1_macro_cv = cross_val_score(pipeline, X_train_raw, y_train, cv=cv, scoring=\"f1_macro\", n_jobs=-1)\n    balacc_cv = cross_val_score(pipeline, X_train_raw, y_train, cv=cv, scoring=\"balanced_accuracy\", n_jobs=-1)\n    print(\"CV f1_macro mean/std:\", np.mean(f1_macro_cv).round(4), np.std(f1_macro_cv).round(4))\n    print(\"CV balanced_accuracy mean/std:\", np.mean(balacc_cv).round(4), np.std(balacc_cv).round(4))\n    scoring['f1_macro_cv'] = [float(np.mean(f1_macro_cv)), float(np.std(f1_macro_cv))]\n    scoring['balanced_acc_cv'] = [float(np.mean(balacc_cv)), float(np.std(balacc_cv))]\nexcept Exception as e:\n    print(\"CV baseline failed (possibly imblearn + cross_val interaction). Continuing. Error:\", e)\n\n# ---------------- 9. Fit pipeline (this will impute -> encode -> SMOTE -> fit) ----------------\nprint(\"\\nFitting final pipeline on train data (preprocessor + SMOTE + classifier)...\")\nstart = time.time()\npipeline.fit(X_train_raw, y_train)\nprint(\"Fitting finished in\", round(time.time() - start, 1), \"seconds.\")\n\n# ---------------- 10. Test evaluation ----------------\nprint(\"\\nEvaluating on test set...\")\ny_pred = pipeline.predict(X_test_raw)\ny_proba = pipeline.predict_proba(X_test_raw) if hasattr(pipeline, \"predict_proba\") else None\n\nacc = accuracy_score(y_test, y_pred)\nf1_macro = f1_score(y_test, y_pred, average=\"macro\")\nf1_weighted = f1_score(y_test, y_pred, average=\"weighted\")\nbal_acc = balanced_accuracy_score(y_test, y_pred)\n\nprint(f\"Accuracy: {acc:.4f} | f1_macro: {f1_macro:.4f} | f1_weighted: {f1_weighted:.4f} | balanced_accuracy: {bal_acc:.4f}\")\nprint(\"\\nClassification report:\")\nprint(classification_report(y_test, y_pred, target_names=class_names))\n\n# confusion matrix plot\ncm = confusion_matrix(y_test, y_pred)\ndisp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=class_names)\nfig, ax = plt.subplots(figsize=(8,6))\ndisp.plot(ax=ax, cmap=\"Blues\", xticks_rotation=45)\nplt.title(\"Confusion Matrix (Test)\")\nplt.tight_layout()\nplt.show()\n\n# per-class metrics table\nprecision, recall, f1, support = precision_recall_fscore_support(y_test, y_pred, labels=list(range(len(class_names))))\nper_class_df = pd.DataFrame({\n    \"class_label\": class_names,\n    \"precision\": precision,\n    \"recall\": recall,\n    \"f1\": f1,\n    \"support\": support\n})\nprint(\"\\nPer-class metrics:\")\nprint(per_class_df)\n\n# ---------------- 11. SHAP (global summary) - best-effort, sample-limited ----------------\nshap_path = OUT_DIR / \"shap_summary.png\"\nif SHAP_AVAILABLE:\n    try:\n        # get inner trained estimator for tree explainer\n        clf_wrapped = None\n        # If imblearn pipeline, classifier is at pipeline.named_steps['classifier']\n        if hasattr(pipeline, \"named_steps\") and \"classifier\" in pipeline.named_steps:\n            clf_wrapped = pipeline.named_steps[\"classifier\"]\n        else:\n            # fallback\n            clf_wrapped = pipeline.steps[-1][1]\n\n        # underlying tree estimator (XGBoost sklearn wrapper)\n        inner = getattr(clf_wrapped, \"get_booster\", None)\n        # For XGB, shap.TreeExplainer accepts the sklearn wrapper (XGBClassifier) as well.\n        # Build sample for SHAP from X_train_raw\n        sample_n = min(200, len(X_train_raw))\n        sample_for_shap = X_train_raw.sample(n=sample_n, random_state=42)\n        X_proc_for_shap = pipeline.named_steps[\"preprocessor\"].transform(sample_for_shap) if preprocessor != \"passthrough\" else sample_for_shap.values\n\n        explainer = shap.TreeExplainer(clf_wrapped)\n        shap_vals = explainer.shap_values(X_proc_for_shap)\n\n        plt.figure(figsize=(10,6))\n        # SHAP for multiclass returns list; handle both cases\n        if isinstance(shap_vals, list):\n            # show summary for the class with highest mean absolute impact\n            mean_abs = [np.mean(np.abs(s)) for s in shap_vals]\n            top_idx = int(np.argmax(mean_abs))\n            print(\"Showing SHAP summary for class index:\", top_idx, \"label:\", class_names[top_idx])\n            shap.summary_plot(shap_vals[top_idx], X_proc_for_shap, show=False)\n        else:\n            shap.summary_plot(shap_vals, X_proc_for_shap, show=False)\n        plt.tight_layout()\n        plt.savefig(shap_path, dpi=150)\n        plt.close()\n        print(\"Saved SHAP summary to:\", shap_path)\n    except Exception as e:\n        print(\"SHAP generation failed (environment/version issue). Error:\", e)\n        print(\"Falling back to model.feature_importances_ (if available).\")\nelse:\n    print(\"SHAP not installed; skipping SHAP plots.\")\n\n# ---------------- 12. Feature importances fallback ----------------\nfeature_importances = None\ntry:\n    # try to find base estimator with feature_importances_\n    clf_wrapped = pipeline.named_steps.get(\"classifier\", pipeline.steps[-1][1]) if hasattr(pipeline, \"named_steps\") else pipeline.steps[-1][1]\n    # XGBoost sklearn wrapper exposes feature_importances_\n    base_est = getattr(clf_wrapped, \"booster\", None) or getattr(clf_wrapped, \"get_booster\", None) or clf_wrapped\n    # many wrappers have .feature_importances_\n    if hasattr(clf_wrapped, \"feature_importances_\"):\n        fi_vals = clf_wrapped.feature_importances_\n        # reconstruct feature names\n        if preprocessor != \"passthrough\":\n            try:\n                ohe_names = []\n                # numeric feature names remain as-is\n                num_names = numeric_cols if numeric_cols else []\n                ohe_names = list(preprocessor.named_transformers_[\"cat\"].named_steps[\"onehot\"].get_feature_names_out(cat_cols)) if cat_cols else []\n                feat_names = num_names + ohe_names\n            except Exception:\n                feat_names = [f\"f{i}\" for i in range(len(fi_vals))]\n        else:\n            feat_names = [f\"f{i}\" for i in range(len(fi_vals))]\n        feature_importances = dict(zip(feat_names, fi_vals.tolist()))\n        # save top 10 for display\n        top10 = sorted(feature_importances.items(), key=lambda x: x[1], reverse=True)[:10]\n        print(\"\\nTop feature importances:\")\n        for k,v in top10:\n            print(k, round(v, 4))\nexcept Exception as e:\n    print(\"Could not extract feature_importances_. Error:\", e)\n\n# ---------------- 13. Demo: sample rows predictions + recommendations ----------------\n# We'll produce simple rule-based recommendations based on raw values and class predicted.\ndef is_high_risk_feature(fname, val, heuristics):\n    fname_lower = str(fname).lower()\n    if 'sleep' in fname_lower:\n        return float(val) < heuristics.get(\"sleep_q25\", 6)\n    if 'socialmedia' in fname_lower or 'screen' in fname_lower:\n        return float(val) > heuristics.get(\"socialmedia_q75\", 6)\n    if 'energy' in fname_lower:\n        return int(val) == 1\n    return False\n\ndef is_good_feature(fname, val, heuristics):\n    fname_lower = str(fname).lower()\n    if 'sleep' in fname_lower:\n        m = heuristics.get(\"sleep_median\", 7)\n        return 7 <= float(val) <= 9 or abs(float(val) - m) < 1.5\n    if 'socialmedia' in fname_lower:\n        return float(val) <= 2\n    if 'energy' in fname_lower:\n        return int(val) == 0\n    return False\n\n# heuristics derived from entire dataset (for thresholds)\nheuristics = {}\nif 'Sleep_Hours' in X.columns:\n    q25, q50, q75 = X['Sleep_Hours'].quantile([0.25, 0.5, 0.75]).values\n    heuristics['sleep_q25'] = float(q25); heuristics['sleep_median'] = float(q50); heuristics['sleep_q75'] = float(q75)\nif 'SocialMedia_Hours' in X.columns:\n    heuristics['socialmedia_q75'] = float(X['SocialMedia_Hours'].quantile(0.75))\n\nprint(\"\\nDerived heuristics:\", heuristics)\n\nn_demo = min(5, len(X_test_raw))\ndemo_rows = X_test_raw.iloc[:n_demo].reset_index(drop=True)\ndemo_res = []\nfor i in range(n_demo):\n    row = demo_rows.iloc[[i]]  # keep as df\n    pred = pipeline.predict(row)[0]\n    probs = pipeline.predict_proba(row)[0] if hasattr(pipeline, \"predict_proba\") else None\n    pred_label = le.inverse_transform([pred])[0]\n    recs = []\n    # baseline by severity label keyword if present in label text\n    lab_lower = str(pred_label).lower()\n    if 'severe' in lab_lower:\n        recs.append(\"Predicted severity high: seek professional help.\")\n    elif 'moderate' in lab_lower:\n        recs.append(\"Consider support groups, improve sleep and routines.\")\n    else:\n        recs.append(\"Maintain healthy habits; monitor changes.\")\n\n    # feature-specific rules (if raw value present)\n    if 'Sleep_Hours' in row.columns:\n        try:\n            sh = float(row.iloc[0]['Sleep_Hours'])\n            if sh < heuristics.get('sleep_q25', 6):\n                recs.append(\"Increase sleep towards 7-9 hours per night.\")\n            elif sh > heuristics.get('sleep_q75', 10):\n                recs.append(\"Evaluate sleep quality; oversleep may indicate issues.\")\n        except Exception:\n            pass\n    if 'SocialMedia_Hours' in row.columns:\n        try:\n            sm = float(row.iloc[0]['SocialMedia_Hours'])\n            if sm > heuristics.get('socialmedia_q75', 6):\n                recs.append(\"High social media usage: consider scheduled breaks.\")\n        except Exception:\n            pass\n\n    # join unique\n    seen = set(); final = []\n    for r in recs:\n        if r not in seen:\n            seen.add(r); final.append(r)\n\n    demo_res.append({\n        \"index\": int(i),\n        \"pred_label\": pred_label,\n        \"probabilities\": {le.inverse_transform([j])[0]: float(probs[j]) for j in range(len(probs))} if probs is not None else None,\n        \"recommendation\": \" \".join(final)\n    })\n\nprint(\"\\nDemo recommendations (first few test rows):\")\nprint(pd.DataFrame(demo_res))\n\n# ---------------- 14. Save artifacts ----------------\nmetadata = {\n    \"timestamp\": time.time(),\n    \"n_rows\": int(len(df)),\n    \"n_features\": int(X.shape[1]),\n    \"numeric_cols\": numeric_cols,\n    \"categorical_cols\": cat_cols,\n    \"class_names\": class_names,\n    \"metrics\": {\n        \"accuracy\": float(acc),\n        \"f1_macro\": float(f1_macro),\n        \"f1_weighted\": float(f1_weighted),\n        \"balanced_accuracy\": float(bal_acc)\n    },\n    \"heuristics\": heuristics,\n    \"cv_baseline\": scoring,\n    \"feature_importances\": feature_importances\n}\n\njoblib.dump(pipeline, OUT_DIR / \"depression_pipeline.joblib\")\njoblib.dump(le, OUT_DIR / \"label_encoder.joblib\")\nwith open(OUT_DIR / \"metadata.json\", \"w\") as f:\n    json.dump(metadata, f, indent=2)\n\nprint(\"\\nSaved artifacts to:\", OUT_DIR)\nprint(list(OUT_DIR.iterdir()))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:58:37.778152Z","iopub.execute_input":"2025-09-15T09:58:37.778482Z","iopub.status.idle":"2025-09-15T09:58:55.761425Z","shell.execute_reply.started":"2025-09-15T09:58:37.778457Z","shell.execute_reply":"2025-09-15T09:58:55.760484Z"}},"outputs":[{"name":"stdout","text":"Loading dataset: /kaggle/input/mental-health-classification/Mental Health Classification.csv\nData shape: (1998, 21)\n   Gender  Age  Education_Level  Employment_Status  Depression_Type  Symptoms  \\\n0       1   25                2                  3                5        11   \n1       1   25                2                  2                5         0   \n2       1   25                2                  3                2         5   \n\n   Low_Energy  Low_SelfEsteem  Search_Depression_Online  Worsening_Depression  \\\n0           1               1                         1                     1   \n1           1               1                         0                     1   \n2           1               1                         1                     1   \n\n   ...  How many times you eat   SocialMedia_Hours  SocialMedia_WhileEating  \\\n0  ...                        0                 10                        3   \n1  ...                        0                  8                        3   \n2  ...                        0                 10                        3   \n\n   Sleep_Hours  Nervous_Level  Depression_Score  Coping_Methods  Self_Harm  \\\n0           10             10                10              11          0   \n1            4             10                10               0          0   \n2            4             10                10               0          1   \n\n   Mental_Health_Support  Suicide_Attempts  \n0                      0                 0  \n1                      1                 0  \n2                      1                 1  \n\n[3 rows x 21 columns]\n\nTarget distribution:\nDepression_Type\n9     627\n2     449\n5     386\n6     193\n4     131\n11     34\n1      33\n7      32\n0      32\n3      31\n10     29\n8      21\nName: count, dtype: int64\n\nEncoded target classes: ['0', '1', '10', '11', '2', '3', '4', '5', '6', '7', '8', '9']\n\nNumeric columns: ['Symptoms', 'Your overeating level', 'SocialMedia_Hours', 'Depression_Score', 'Coping_Methods']\nCategorical columns: ['Gender', 'Age', 'Education_Level', 'Employment_Status', 'Low_Energy', 'Low_SelfEsteem', 'Search_Depression_Online', 'Worsening_Depression', 'How many times you eat ', 'SocialMedia_WhileEating', 'Sleep_Hours', 'Nervous_Level', 'Self_Harm', 'Mental_Health_Support', 'Suicide_Attempts']\n\nTrain / Test shapes: (1598, 20) (400, 20)\n\nUsing imblearn pipeline (SMOTE will be applied after preprocessing).\n\nRunning quick cross-validation baseline (f1_macro, balanced_accuracy)...\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"CV f1_macro mean/std: 1.0 0.0\nCV balanced_accuracy mean/std: 1.0 0.0\n\nFitting final pipeline on train data (preprocessor + SMOTE + classifier)...\nFitting finished in 2.6 seconds.\n\nEvaluating on test set...\nAccuracy: 1.0000 | f1_macro: 1.0000 | f1_weighted: 1.0000 | balanced_accuracy: 1.0000\n\nClassification report:\n              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00         6\n           1       1.00      1.00      1.00         7\n          10       1.00      1.00      1.00         6\n          11       1.00      1.00      1.00         7\n           2       1.00      1.00      1.00        90\n           3       1.00      1.00      1.00         6\n           4       1.00      1.00      1.00        26\n           5       1.00      1.00      1.00        77\n           6       1.00      1.00      1.00        39\n           7       1.00      1.00      1.00         6\n           8       1.00      1.00      1.00         4\n           9       1.00      1.00      1.00       126\n\n    accuracy                           1.00       400\n   macro avg       1.00      1.00      1.00       400\nweighted avg       1.00      1.00      1.00       400\n\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 2 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"\nPer-class metrics:\n   class_label  precision  recall   f1  support\n0            0        1.0     1.0  1.0        6\n1            1        1.0     1.0  1.0        7\n2           10        1.0     1.0  1.0        6\n3           11        1.0     1.0  1.0        7\n4            2        1.0     1.0  1.0       90\n5            3        1.0     1.0  1.0        6\n6            4        1.0     1.0  1.0       26\n7            5        1.0     1.0  1.0       77\n8            6        1.0     1.0  1.0       39\n9            7        1.0     1.0  1.0        6\n10           8        1.0     1.0  1.0        4\n11           9        1.0     1.0  1.0      126\nShowing SHAP summary for class index: 4 label: 2\nSaved SHAP summary to: artifacts/shap_summary.png\n\nTop feature importances:\nNervous_Level_3 0.1295\nEmployment_Status_1 0.1151\nSymptoms 0.051\nNervous_Level_2 0.0382\nSearch_Depression_Online_0 0.0346\nLow_Energy_2 0.0332\nEducation_Level_0 0.0318\nCoping_Methods 0.0315\nNervous_Level_1 0.0302\nSocialMedia_WhileEating_1 0.0302\n\nDerived heuristics: {'sleep_q25': 5.0, 'sleep_median': 7.0, 'sleep_q75': 8.0, 'socialmedia_q75': 9.0}\n\nDemo recommendations (first few test rows):\n   index pred_label                                      probabilities  \\\n0      0          9  {'0': 0.00030056925606913865, '1': 0.000348543...   \n1      1          9  {'0': 0.0006314193597063422, '1': 0.0007530071...   \n2      2          2  {'0': 7.688404730288312e-05, '1': 7.4028976086...   \n3      3          9  {'0': 0.0002561661531217396, '1': 0.0002419503...   \n4      4          9  {'0': 0.0003625748213380575, '1': 0.0003424536...   \n\n                                      recommendation  \n0  Maintain healthy habits; monitor changes. Incr...  \n1  Maintain healthy habits; monitor changes. Incr...  \n2  Maintain healthy habits; monitor changes. Incr...  \n3          Maintain healthy habits; monitor changes.  \n4          Maintain healthy habits; monitor changes.  \n\nSaved artifacts to: artifacts\n[PosixPath('artifacts/depression_pipeline.joblib'), PosixPath('artifacts/label_encoder.joblib'), PosixPath('artifacts/metadata.json'), PosixPath('artifacts/shap_summary.png')]\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"print(\"Train unique indices:\", set(X_train_raw.index))\nprint(\"Test unique indices:\", set(X_test_raw.index))\nprint(\"Intersection:\", set(X_train_raw.index).intersection(set(X_test_raw.index)))\n\nif len(set(X_train_raw.index).intersection(set(X_test_raw.index))) > 0:\n    print(\"Warning: Overlap found between train and test indices! Potential data leakage.\")\nelse:\n    print(\"No overlap in train/test indices — good.\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:50:42.339292Z","iopub.execute_input":"2025-09-15T09:50:42.340703Z","iopub.status.idle":"2025-09-15T09:50:42.349320Z","shell.execute_reply.started":"2025-09-15T09:50:42.340613Z","shell.execute_reply":"2025-09-15T09:50:42.348247Z"}},"outputs":[{"name":"stdout","text":"Train unique indices: {}\nTest unique indices: {0, 3, 8, 16, 30, 31, 38, 39, 40, 44, 55, 58, 64, 76, 85, 104, 106, 112, 113, 116, 122, 129, 130, 131, 133, 143, 149, 150, 153, 167, 170, 179, 189, 195, 201, 204, 205, 206, 216, 217, 221, 224, 226, 233, 237, 255, 269, 275, 276, 277, 278, 284, 286, 287, 292, 293, 300, 307, 313, 328, 336, 341, 345, 351, 352, 354, 355, 367, 376, 387, 390, 394, 407, 410, 412, 418, 423, 429, 431, 432, 436, 442, 443, 449, 454, 468, 478, 481, 482, 490, 492, 500, 501, 504, 506, 510, 511, 514, 516, 523, 530, 534, 535, 536, 537, 544, 547, 549, 550, 553, 557, 564, 569, 580, 581, 586, 594, 595, 596, 597, 598, 602, 611, 634, 641, 643, 644, 654, 655, 664, 673, 676, 682, 684, 690, 704, 705, 710, 723, 724, 726, 727, 737, 741, 743, 749, 752, 754, 772, 775, 777, 779, 784, 786, 794, 800, 802, 803, 812, 815, 816, 822, 823, 832, 833, 837, 840, 841, 850, 858, 860, 880, 883, 886, 887, 888, 900, 906, 908, 911, 913, 914, 916, 921, 930, 935, 942, 947, 948, 956, 962, 963, 965, 970, 974, 979, 981, 986, 988, 989, 998, 999, 1007, 1011, 1018, 1020, 1027, 1029, 1032, 1037, 1042, 1046, 1051, 1057, 1058, 1060, 1064, 1066, 1070, 1073, 1079, 1086, 1093, 1096, 1100, 1112, 1113, 1118, 1121, 1125, 1127, 1139, 1140, 1142, 1145, 1159, 1168, 1169, 1170, 1172, 1173, 1178, 1183, 1189, 1191, 1201, 1212, 1217, 1219, 1224, 1225, 1229, 1244, 1256, 1265, 1273, 1275, 1277, 1278, 1282, 1285, 1287, 1295, 1298, 1303, 1307, 1314, 1316, 1318, 1321, 1323, 1324, 1338, 1342, 1345, 1347, 1352, 1353, 1359, 1360, 1367, 1374, 1376, 1384, 1386, 1389, 1397, 1402, 1420, 1426, 1439, 1442, 1447, 1449, 1456, 1459, 1470, 1472, 1473, 1477, 1482, 1485, 1489, 1499, 1508, 1511, 1527, 1531, 1533, 1540, 1541, 1542, 1560, 1565, 1576, 1582, 1588, 1595, 1600, 1604, 1606, 1607, 1610, 1613, 1623, 1624, 1626, 1632, 1634, 1636, 1646, 1649, 1652, 1653, 1657, 1659, 1665, 1668, 1669, 1670, 1675, 1678, 1684, 1700, 1711, 1712, 1719, 1721, 1730, 1742, 1743, 1744, 1745, 1750, 1753, 1756, 1763, 1771, 1783, 1784, 1789, 1792, 1810, 1813, 1817, 1820, 1827, 1828, 1830, 1832, 1834, 1839, 1847, 1854, 1867, 1872, 1885, 1891, 1896, 1907, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1923, 1935, 1937, 1944, 1957, 1977, 1979, 1983, 1985, 1993, 1996, 1997}\nIntersection: set()\nNo overlap in train/test indices — good.\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"duplicates = pd.merge(\n    X_train_raw.reset_index(drop=True),\n    X_test_raw.reset_index(drop=True),\n    how='inner'\n)\nprint(f\"Number of duplicate rows between train and test: {len(duplicates)}\")\nif len(duplicates) > 0:\n    print(\"Warning: Duplicate rows found between train and test! Potential leakage.\")\nelse:\n    print(\"No duplicate rows between train and test — good.\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:50:55.426847Z","iopub.execute_input":"2025-09-15T09:50:55.427248Z","iopub.status.idle":"2025-09-15T09:50:55.448499Z","shell.execute_reply.started":"2025-09-15T09:50:55.427223Z","shell.execute_reply":"2025-09-15T09:50:55.447366Z"}},"outputs":[{"name":"stdout","text":"Number of duplicate rows between train and test: 0\nNo duplicate rows between train and test — good.\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"if 'Depression_Score' in X.columns:\n    corr = df['Depression_Score'].corr(df[TARGET_COL].map(lambda x: 1 if x != 'No Depression' else 0))\n    print(f\"Correlation between Depression_Score and target: {corr:.3f}\")\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:51:14.107861Z","iopub.execute_input":"2025-09-15T09:51:14.108263Z","iopub.status.idle":"2025-09-15T09:51:14.116849Z","shell.execute_reply.started":"2025-09-15T09:51:14.108237Z","shell.execute_reply":"2025-09-15T09:51:14.115585Z"}},"outputs":[{"name":"stdout","text":"Correlation between Depression_Score and target: nan\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"numeric_for_corr = df.select_dtypes(include=[np.number])\ncorr_matrix = numeric_for_corr.corr()\nprint(corr_matrix[TARGET_COL] if TARGET_COL in corr_matrix.columns else \"Target not numeric, skipping corr.\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:51:22.970621Z","iopub.execute_input":"2025-09-15T09:51:22.971013Z","iopub.status.idle":"2025-09-15T09:51:22.982160Z","shell.execute_reply.started":"2025-09-15T09:51:22.970980Z","shell.execute_reply":"2025-09-15T09:51:22.980990Z"}},"outputs":[{"name":"stdout","text":"Target not numeric, skipping corr.\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"leak_features = ['Depression_Score', 'Symptoms', 'Suicide_Attempts']\nX_dropped = X.drop(columns=[col for col in leak_features if col in X.columns])\n\n# Redo train/test split and pipeline fitting using X_dropped\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:51:33.733019Z","iopub.execute_input":"2025-09-15T09:51:33.733384Z","iopub.status.idle":"2025-09-15T09:51:33.740267Z","shell.execute_reply.started":"2025-09-15T09:51:33.733358Z","shell.execute_reply":"2025-09-15T09:51:33.739149Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"# After fitting pipeline on train\npipeline.named_steps['preprocessor'].transform(X_test_raw)  # should NOT fit on test\n\n# To confirm, you can print shapes:\nprint(\"Train data shape:\", X_train_raw.shape)\nprint(\"Test data shape:\", X_test_raw.shape)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:51:45.893808Z","iopub.execute_input":"2025-09-15T09:51:45.894218Z","iopub.status.idle":"2025-09-15T09:51:45.914140Z","shell.execute_reply.started":"2025-09-15T09:51:45.894194Z","shell.execute_reply":"2025-09-15T09:51:45.912989Z"}},"outputs":[{"name":"stdout","text":"Train data shape: (1598, 20)\nTest data shape: (400, 20)\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"from sklearn.model_selection import cross_validate\n\ncv_results = cross_validate(\n    pipeline, X_train_raw, y_train,\n    cv=5,\n    scoring=['accuracy', 'f1_macro', 'balanced_accuracy'],\n    return_train_score=True,\n    n_jobs=-1\n)\n\nprint(\"CV Train Accuracy mean/std:\", cv_results['train_accuracy'].mean(), cv_results['train_accuracy'].std())\nprint(\"CV Test Accuracy mean/std:\", cv_results['test_accuracy'].mean(), cv_results['test_accuracy'].std())\nprint(\"CV Train f1_macro mean/std:\", cv_results['train_f1_macro'].mean(), cv_results['train_f1_macro'].std())\nprint(\"CV Test f1_macro mean/std:\", cv_results['test_f1_macro'].mean(), cv_results['test_f1_macro'].std())\nprint(\"CV Train balanced_accuracy mean/std:\", cv_results['train_balanced_accuracy'].mean(), cv_results['train_balanced_accuracy'].std())\nprint(\"CV Test balanced_accuracy mean/std:\", cv_results['test_balanced_accuracy'].mean(), cv_results['test_balanced_accuracy'].std())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:51:56.024680Z","iopub.execute_input":"2025-09-15T09:51:56.025057Z","iopub.status.idle":"2025-09-15T09:52:06.311496Z","shell.execute_reply.started":"2025-09-15T09:51:56.025030Z","shell.execute_reply":"2025-09-15T09:52:06.310414Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"CV Train Accuracy mean/std: 1.0 0.0\nCV Test Accuracy mean/std: 1.0 0.0\nCV Train f1_macro mean/std: 1.0 0.0\nCV Test f1_macro mean/std: 1.0 0.0\nCV Train balanced_accuracy mean/std: 1.0 0.0\nCV Test balanced_accuracy mean/std: 1.0 0.0\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\n\nsimple_pipeline = Pipeline(steps=[\n    (\"preprocessor\", preprocessor),\n    (\"classifier\", LogisticRegression(max_iter=1000, random_state=42))\n])\n\nsimple_pipeline.fit(X_train_raw, y_train)\ny_pred_simple = simple_pipeline.predict(X_test_raw)\n\nprint(\"Simple LogisticRegression accuracy:\", accuracy_score(y_test, y_pred_simple))\nprint(classification_report(y_test, y_pred_simple, target_names=class_names))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:52:07.339130Z","iopub.execute_input":"2025-09-15T09:52:07.340682Z","iopub.status.idle":"2025-09-15T09:52:12.459408Z","shell.execute_reply.started":"2025-09-15T09:52:07.340641Z","shell.execute_reply":"2025-09-15T09:52:12.456785Z"}},"outputs":[{"name":"stdout","text":"Simple LogisticRegression accuracy: 0.8875\n              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00         6\n           1       1.00      1.00      1.00         7\n          10       1.00      1.00      1.00         6\n          11       1.00      1.00      1.00         7\n           2       0.84      0.91      0.87        90\n           3       1.00      1.00      1.00         6\n           4       1.00      1.00      1.00        26\n           5       0.76      0.81      0.78        77\n           6       1.00      1.00      1.00        39\n           7       1.00      1.00      1.00         6\n           8       1.00      1.00      1.00         4\n           9       0.92      0.83      0.87       126\n\n    accuracy                           0.89       400\n   macro avg       0.96      0.96      0.96       400\nweighted avg       0.89      0.89      0.89       400\n\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"import seaborn as sns\n\nfor col in numeric_cols[:3]:  # check first 3 numeric features for quick check\n    plt.figure(figsize=(8,3))\n    sns.kdeplot(X_train_raw[col].dropna(), label='Train')\n    sns.kdeplot(X_test_raw[col].dropna(), label='Test')\n    plt.title(f\"Distribution for {col}\")\n    plt.legend()\n    plt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:52:20.498651Z","iopub.execute_input":"2025-09-15T09:52:20.499025Z","iopub.status.idle":"2025-09-15T09:52:21.639735Z","shell.execute_reply.started":"2025-09-15T09:52:20.498999Z","shell.execute_reply":"2025-09-15T09:52:21.638632Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x300 with 1 Axes>","image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x300 with 1 Axes>","image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x300 with 1 Axes>","image/png":"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\n"},"metadata":{}}],"execution_count":13},{"cell_type":"code","source":"import shap\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\n# Extract preprocessing and model from pipeline\npreprocessor = pipeline.named_steps['preprocessor']\nmodel = pipeline.named_steps['classifier']  # e.g., RandomForestClassifier\n\n# Get feature names after preprocessing\n# For OneHotEncoded categorical features, get feature names accordingly\ndef get_feature_names(preprocessor):\n    feature_names = []\n\n    # numeric features\n    if 'num' in preprocessor.named_transformers_:\n        numeric_features = preprocessor.named_transformers_['num'].feature_names_in_\n        feature_names.extend(numeric_features)\n\n    # categorical features after OneHotEncoder\n    if 'cat' in preprocessor.named_transformers_:\n        ohe = preprocessor.named_transformers_['cat'].named_steps['onehot']\n        cat_features = preprocessor.named_transformers_['cat'].feature_names_in_\n        cat_ohe_features = ohe.get_feature_names_out(cat_features)\n        feature_names.extend(cat_ohe_features)\n\n    return feature_names\n\nfeature_names = get_feature_names(preprocessor)\n\n# If your pipeline does not have named_transformers_ as above, adjust accordingly\n\n# Feature importance from the model (for tree-based)\nimportances = model.feature_importances_\n\n# Sort and plot feature importance\nsorted_idx = np.argsort(importances)[::-1]\nplt.figure(figsize=(12,6))\nplt.bar(range(len(importances)), importances[sorted_idx])\nplt.xticks(range(len(importances)), np.array(feature_names)[sorted_idx], rotation=90)\nplt.title(\"Feature Importances\")\nplt.tight_layout()\nplt.show()\n\n# SHAP values\nexplainer = shap.TreeExplainer(model)\n# Transform raw data through preprocessor for SHAP input\nX_train_transformed = preprocessor.transform(X_train_raw)\nshap_values = explainer.shap_values(X_train_transformed)\n\n# Plot SHAP summary plot for class 0 (or pick class index accordingly)\nshap.summary_plot(shap_values, X_train_transformed, feature_names=feature_names)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T09:55:31.799704Z","iopub.execute_input":"2025-09-15T09:55:31.800802Z","iopub.status.idle":"2025-09-15T09:55:36.671011Z","shell.execute_reply.started":"2025-09-15T09:55:31.800766Z","shell.execute_reply":"2025-09-15T09:55:36.669766Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x600 with 1 Axes>","image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x950 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"import os\nimport json\nimport time\nfrom pathlib import Path\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, cross_val_score\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import (classification_report, confusion_matrix, accuracy_score,\n                             f1_score, precision_recall_fscore_support, balanced_accuracy_score)\nfrom sklearn.metrics import ConfusionMatrixDisplay\n\nfrom xgboost import XGBClassifier\n\ntry:\n    from imblearn.over_sampling import SMOTE\n    from imblearn.pipeline import Pipeline as ImbPipeline\n    IMBLEARN_AVAILABLE = True\nexcept ImportError:\n    SMOTE = None\n    ImbPipeline = None\n    IMBLEARN_AVAILABLE = False\n\ntry:\n    import shap\n    SHAP_AVAILABLE = True\nexcept ImportError:\n    shap = None\n    SHAP_AVAILABLE = False\n\nimport joblib\n\n# ----------- Configuration -----------\n\nDATA_PATH = \"/kaggle/input/mental-health-classification/Mental Health Classification.csv\"  # <-- change to your dataset path\nTARGET_COL = \"Depression_Type\"\nDROP_COLS = ['Symptoms', 'Depression_Score', 'Suicide_Attempts']  # will drop only if exist\nOUT_DIR = Path(\"artifacts\")\nOUT_DIR.mkdir(exist_ok=True)\n\n# ----------- Helper Functions -----------\n\ndef prepare_data(df, target_col, drop_cols):\n    # Drop columns only if they exist (avoid KeyError)\n    existing_drop_cols = [col for col in drop_cols if col in df.columns]\n    if existing_drop_cols:\n        print(f\"Dropping columns: {existing_drop_cols}\")\n    df_clean = df.drop(columns=existing_drop_cols)\n    \n    # Fill target NaNs with string 'MISSING' before label encoding\n    df_clean[target_col] = df_clean[target_col].fillna('MISSING').astype(str)\n    X = df_clean.drop(columns=[target_col])\n    y = df_clean[target_col]\n    return X, y\n\ndef detect_feature_types(X, low_card_threshold=10):\n    numeric_cols = X.select_dtypes(include=[np.number]).columns.tolist()\n    cat_cols = X.select_dtypes(include=['object', 'category']).columns.tolist()\n\n    # Treat low-cardinality numeric as categorical if integer-like\n    for col in numeric_cols[:]:\n        if X[col].nunique(dropna=True) <= low_card_threshold and np.all(np.mod(X[col].dropna(), 1) == 0):\n            cat_cols.append(col)\n            numeric_cols.remove(col)\n    return numeric_cols, cat_cols\n\n# ----------- Main -----------\n\ndef main():\n    print(f\"Loading data from: {DATA_PATH}\")\n    df = pd.read_csv(DATA_PATH)\n    print(f\"Data shape: {df.shape}\")\n\n    if TARGET_COL not in df.columns:\n        raise ValueError(f\"Target column '{TARGET_COL}' not found. Available columns: {df.columns.tolist()}\")\n\n    # Prepare data (drop leakage or irrelevant columns safely)\n    X, y_str = prepare_data(df, TARGET_COL, DROP_COLS)\n\n    # Encode target labels\n    le = LabelEncoder()\n    y = le.fit_transform(y_str)\n    class_names = list(le.classes_)\n    print(f\"Target classes: {class_names}\")\n\n    # Define numeric pipeline only if numeric columns exist\n    numeric_transformer = Pipeline([\n        ('imputer', SimpleImputer(strategy='median')),\n        ('scaler', StandardScaler())\n    ]) if numeric_cols else 'passthrough'\n\n    # Define categorical pipeline only if categorical columns exist\n    categorical_transformer = Pipeline([\n        ('imputer', SimpleImputer(strategy='most_frequent')),\n        ('onehot', OneHotEncoder(handle_unknown='ignore', sparse=False))\n    ]) if cat_cols else 'passthrough'\n\n    # Collect transformers dynamically\n    transformers = []\n    if numeric_cols:\n        transformers.append(('num', numeric_transformer, numeric_cols))\n    if cat_cols:\n        transformers.append(('cat', categorical_transformer, cat_cols))\n\n    # Create ColumnTransformer only if there are any transformers; otherwise passthrough\n    preprocessor = ColumnTransformer(\n        transformers=transformers,\n        remainder='drop'  # drop columns not in numeric_cols or cat_cols\n    ) if transformers else 'passthrough'\n\n    # Classifier\n    clf = XGBClassifier(\n        n_estimators=200,\n        learning_rate=0.05,\n        max_depth=6,\n        subsample=0.8,\n        colsample_bytree=0.8,\n        random_state=42,\n        use_label_encoder=False,\n        eval_metric='mlogloss'\n    )\n\n    # Build pipeline with SMOTE if imblearn available\n    if IMBLEARN_AVAILABLE:\n        pipeline = ImbPipeline([\n            ('preprocessor', preprocessor),\n            ('smote', SMOTE(random_state=42)),\n            ('classifier', clf)\n        ])\n        print(\"Using imblearn pipeline with SMOTE.\")\n    else:\n        pipeline = Pipeline([\n            ('preprocessor', preprocessor),\n            ('classifier', clf)\n        ])\n        print(\"imblearn not available, SMOTE not applied.\")\n\n    # Cross-validation (3-fold)\n    cv = StratifiedKFold(n_splits=3, shuffle=True, random_state=42)\n    scoring_results = {}\n    try:\n        f1_macro_cv = cross_val_score(pipeline, X_train_raw, y_train, cv=cv, scoring='f1_macro', n_jobs=-1)\n        bal_acc_cv = cross_val_score(pipeline, X_train_raw, y_train, cv=cv, scoring='balanced_accuracy', n_jobs=-1)\n        print(f\"CV f1_macro mean/std: {f1_macro_cv.mean():.4f} ± {f1_macro_cv.std():.4f}\")\n        print(f\"CV balanced_accuracy mean/std: {bal_acc_cv.mean():.4f} ± {bal_acc_cv.std():.4f}\")\n        scoring_results['f1_macro_cv'] = [float(f1_macro_cv.mean()), float(f1_macro_cv.std())]\n        scoring_results['balanced_accuracy_cv'] = [float(bal_acc_cv.mean()), float(bal_acc_cv.std())]\n    except Exception as e:\n        print(\"Cross-validation failed:\", e)\n\n    # Train final pipeline\n    print(\"Fitting final pipeline on training data...\")\n    start_time = time.time()\n    pipeline.fit(X_train_raw, y_train)\n    print(f\"Training done in {time.time() - start_time:.1f} seconds.\")\n\n    # Evaluate on test set\n    print(\"Evaluating on test set...\")\n    y_pred = pipeline.predict(X_test_raw)\n    y_proba = pipeline.predict_proba(X_test_raw) if hasattr(pipeline, \"predict_proba\") else None\n\n    acc = accuracy_score(y_test, y_pred)\n    f1_macro = f1_score(y_test, y_pred, average='macro')\n    f1_weighted = f1_score(y_test, y_pred, average='weighted')\n    bal_acc = balanced_accuracy_score(y_test, y_pred)\n\n    print(f\"Accuracy: {acc:.4f} | f1_macro: {f1_macro:.4f} | f1_weighted: {f1_weighted:.4f} | balanced_accuracy: {bal_acc:.4f}\")\n    print(\"Classification report:\\n\", classification_report(y_test, y_pred, target_names=class_names))\n\n    # Confusion matrix plot\n    cm = confusion_matrix(y_test, y_pred)\n    disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=class_names)\n    fig, ax = plt.subplots(figsize=(8,6))\n    disp.plot(ax=ax, cmap='Blues', xticks_rotation=45)\n    plt.title(\"Confusion Matrix (Test set)\")\n    plt.tight_layout()\n    plt.show()\n\n    # Per-class metrics table\n    precision, recall, f1, support = precision_recall_fscore_support(y_test, y_pred, labels=range(len(class_names)))\n    per_class_df = pd.DataFrame({\n        'class_label': class_names,\n        'precision': precision,\n        'recall': recall,\n        'f1': f1,\n        'support': support\n    })\n    print(\"Per-class metrics:\\n\", per_class_df)\n\n    # SHAP explainability\n    shap_path = OUT_DIR / \"shap_summary.png\"\n    if SHAP_AVAILABLE:\n        try:\n            clf_wrapped = pipeline.named_steps['classifier'] if IMBLEARN_AVAILABLE else pipeline.named_steps['classifier']\n            sample_n = min(200, len(X_train_raw))\n            sample = X_train_raw.sample(n=sample_n, random_state=42)\n            X_sample_proc = pipeline.named_steps['preprocessor'].transform(sample) if preprocessor != \"passthrough\" else sample.values\n\n            explainer = shap.TreeExplainer(clf_wrapped)\n            shap_values = explainer.shap_values(X_sample_proc)\n\n            plt.figure(figsize=(10,6))\n            if isinstance(shap_values, list):\n                mean_abs_vals = [np.mean(np.abs(s)) for s in shap_values]\n                top_class_idx = int(np.argmax(mean_abs_vals))\n                print(f\"Showing SHAP summary for class index {top_class_idx} ({class_names[top_class_idx]})\")\n                shap.summary_plot(shap_values[top_class_idx], X_sample_proc, show=False)\n            else:\n                shap.summary_plot(shap_values, X_sample_proc, show=False)\n            plt.tight_layout()\n            plt.savefig(shap_path, dpi=150)\n            plt.close()\n            print(f\"SHAP summary plot saved to {shap_path}\")\n        except Exception as e:\n            print(\"SHAP explainability failed:\", e)\n            print(\"Skipping SHAP plots.\")\n    else:\n        print(\"SHAP package not available; skipping explainability.\")\n\n    # Feature importances fallback\n    try:\n        clf_wrapped = pipeline.named_steps['classifier']\n        if hasattr(clf_wrapped, 'feature_importances_'):\n            fi_vals = clf_wrapped.feature_importances_\n            # Build feature names after preprocessing\n            if preprocessor != \"passthrough\":\n                try:\n                    num_names = numeric_cols if numeric_cols else []\n                    ohe_names = []\n                    if cat_cols:\n                        ohe = pipeline.named_steps['preprocessor'].named_transformers_['cat'].named_steps['onehot']\n                        ohe_categories = ohe.categories_\n                        for cats in ohe_categories:\n                            ohe_names.extend(cats)\n                    feature_names = num_names + ohe_names\n                except Exception:\n                    feature_names = [f\"f{i}\" for i in range(len(fi_vals))]\n            else:\n                feature_names = X_train_raw.columns.tolist()\n\n            fi_df = pd.DataFrame({\n                'feature': feature_names,\n                'importance': fi_vals\n            }).sort_values(by='importance', ascending=False).head(10)\n\n            print(\"\\nTop feature importances:\")\n            for _, row in fi_df.iterrows():\n                print(f\"{row['feature']:25} {row['importance']:.4f}\")\n    except Exception as e:\n        print(\"Failed to extract feature importances:\", e)\n\n    # Save pipeline, label encoder, and metadata\n    joblib.dump(pipeline, OUT_DIR / \"pipeline.joblib\")\n    joblib.dump(le, OUT_DIR / \"label_encoder.joblib\")\n\n    meta = {\n        \"target_col\": TARGET_COL,\n        \"classes\": class_names,\n        \"numeric_features\": numeric_cols,\n        \"categorical_features\": cat_cols,\n        \"drop_cols\": DROP_COLS,\n        \"cv_results\": scoring_results,\n        \"test_metrics\": {\n            \"accuracy\": acc,\n            \"f1_macro\": f1_macro,\n            \"f1_weighted\": f1_weighted,\n            \"balanced_accuracy\": bal_acc\n        }\n    }\n    with open(OUT_DIR / \"metadata.json\", \"w\") as f:\n        json.dump(meta, f, indent=4)\n\n    print(f\"Saved pipeline, label encoder, metadata in '{OUT_DIR}'\")\n\nif __name__ == \"__main__\":\n    main()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T10:20:50.295385Z","iopub.execute_input":"2025-09-15T10:20:50.295792Z","iopub.status.idle":"2025-09-15T10:21:07.363198Z","shell.execute_reply.started":"2025-09-15T10:20:50.295766Z","shell.execute_reply":"2025-09-15T10:21:07.362157Z"}},"outputs":[{"name":"stdout","text":"Loading data from: /kaggle/input/mental-health-classification/Mental Health Classification.csv\nData shape: (1998, 21)\nDropping columns: ['Symptoms', 'Depression_Score', 'Suicide_Attempts']\nTarget classes: ['0', '1', '10', '11', '2', '3', '4', '5', '6', '7', '8', '9']\nUsing imblearn pipeline with SMOTE.\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"CV f1_macro mean/std: 1.0000 ± 0.0000\nCV balanced_accuracy mean/std: 1.0000 ± 0.0000\nFitting final pipeline on training data...\nTraining done in 2.6 seconds.\nEvaluating on test set...\nAccuracy: 1.0000 | f1_macro: 1.0000 | f1_weighted: 1.0000 | balanced_accuracy: 1.0000\nClassification report:\n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00         6\n           1       1.00      1.00      1.00         7\n          10       1.00      1.00      1.00         6\n          11       1.00      1.00      1.00         7\n           2       1.00      1.00      1.00        90\n           3       1.00      1.00      1.00         6\n           4       1.00      1.00      1.00        26\n           5       1.00      1.00      1.00        77\n           6       1.00      1.00      1.00        39\n           7       1.00      1.00      1.00         6\n           8       1.00      1.00      1.00         4\n           9       1.00      1.00      1.00       126\n\n    accuracy                           1.00       400\n   macro avg       1.00      1.00      1.00       400\nweighted avg       1.00      1.00      1.00       400\n\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 2 Axes>","image/png":"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eO+993D//n1ERUUZ91m5ciXatWuHQoUKYcaMGZgwYQLOnTuHJk2aGL9H3n77bbz00kvG/bO3f6tTpw4SExNNilEieo4IIhJJSUkCgOjUqVOe9j958qQAIAYOHGgy/sEHHwgAYs+ePcaxgIAAAUAcOHDAOBYXFyd0Op14//33jWORkZECgPjss89MjtmnTx8REBBglmHSpEni33+Fv/jiCwFA3LlzJ9fc2edYunSpcaxmzZqiePHiIj4+3jh26tQpodVqRe/evc3O179/f5Njvvrqq8LLyyvXc/77dbi6ugohhHjttddEq1athBBCZGVlCR8fHxEaGprjHKSmpoqsrCyz16HT6cSUKVOMY+Hh4WavLVuzZs0EALFo0aIcH2vWrJnJ2I4dOwQAMW3aNHHt2jVRqFAh0blz56e+xitXrggAYt68eU/cr0qVKibnnDp1qnB1dRWXLl0y2W/cuHHCwcFBREVFCSGEGDFihHB3dxeZmZm5HvuHH34QAMTevXufmvfevXs5fs/92/3790XhwoXFoEGDTMZjYmKEh4eHyfjQoUPFk36tHDp0SAAQ69ate2o2IpIPO5VEAPR6PQDAzc0tT/tn3xrl310kAHj//fcBwGztZeXKlfHiiy8avy5WrBgqVqyIa9euPXPmx2Wvxfz555/N3jLNze3bt3Hy5En07dsXnp6exvHq1avjpZdeyvEWMO+8847J1y+++CLi4+ONc5gXPXv2xL59+xATE4M9e/YgJiYmx7e+gUfrMLXaRz+qsrKyEB8fb3xr//jx43k+p06nQ79+/fK0b+vWrfH2229jypQp6NKlC5ydnbF48eKnPi8+Ph4AUKRIkTznAoAffvgBL774IooUKYK7d+8at+DgYGRlZeHAgQMAHv0/TklJwa5duyw6fm5cXFzg5OSEffv24d69eznus2vXLiQmJuKNN94wyebg4IAGDRpg7969eT5f9rzcvXtXkfxEpC4sKokAuLu7AwDu37+fp/3//vtvaLValCtXzmTcx8cHhQsXxt9//20yXqpUKbNjFClSJNdf5M/i9ddfR+PGjTFw4EB4e3ujR48eWL9+/RMLzOycFStWNHusUqVKuHv3LlJSUkzGH38t2YWCJa/llVdegZubG9atW4fVq1ejXr16ZnOZzWAw4IsvvkD58uWh0+lQtGhRFCtWDH/99ReSkpLyfM4SJUpYdFHOrFmz4OnpiZMnT2Lu3LkoXrx4np8rLFwzePnyZWzfvh3FihUz2YKDgwEAcXFxAIAhQ4agQoUKaNu2LUqWLIn+/ftj+/btFp3r33Q6HWbMmIFt27bB29sbTZs2xcyZMxETE2OSDQBatmxplm/nzp3GbHmRPS9K3T6JiNSFV38T4VFR6efnhzNnzlj0vLz+cnRwcMhxPC/FR27nyF7vl83FxQUHDhzA3r178euvv2L79u1Yt24dWrZsiZ07d+aawVLWvJZsOp0OXbp0wfLly3Ht2rUcb0GTbfr06ZgwYQL69++PqVOnwtPTE1qtFiNHjsxzRxZ4ND+WOHHihLFgOn36NN54442nPsfLywuAZQU28Khwfumll/Dhhx/m+HiFChUAAMWLF8fJkyexY8cObNu2Ddu2bcPSpUvRu3dv4y2MLDVy5Eh06NABmzZtwo4dOzBhwgSEhYVhz549qFWrlnGOV65cCR8fH7PnOzrm/ddI9rwULVr0mbISkbqxqCT6v/bt2+Prr7/G4cOH0bBhwyfuGxAQAIPBgMuXL5tcBBEbG4vExETjldxKKFKkiMmV0tke74YCgFarRatWrdCqVSvMnj0b06dPx8cff4y9e/cau16Pvw4AuHjxotljFy5cQNGiReHq6mr9i8hBz5498d1330Gr1eZ4cVO2H3/8ES1atMC3335rMp6YmGhSnCjZ/UpJSUG/fv1QuXJlNGrUCDNnzsSrr75qvMI8N6VKlYKLiwsiIyMtOl/ZsmWRnJyc4/+jxzk5OaFDhw7o0KEDDAYDhgwZgsWLF2PChAkoV67cM81D2bJl8f777+P999/H5cuXUbNmTXz++edYtWoVypYtC+BRQfu0fE87d/a8POnCISKSF9/+Jvq/Dz/8EK6urhg4cCBiY2PNHr969arx1i2vvPIKAJhdoT179mwAQLt27RTLVbZsWSQlJeGvv/4yjt2+fRsbN2402S8hIcHsudk3AX/8NkfZfH19UbNmTSxfvtykcD1z5gx27txpfJ220KJFC0ydOhVfffVVjh2wbA4ODmZd0B9++AE3b940GcsufnMqwC01duxYREVFYfny5Zg9ezZKly6NPn365DqP2QoUKIC6devi2LFjFp2ve/fuOHz4MHbs2GH2WGJiIjIzMwH8s2Yzm1arRfXq1QH88//Yknl48OCB2c3my5YtCzc3N+Px2rRpA3d3d0yfPh0ZGRlmx8i+v2pezh0REQEPDw9UqVLlqdmISD7sVBL9X9myZbFmzRq8/vrrqFSpkskn6hw6dAg//PAD+vbtCwCoUaMG+vTpg6+//hqJiYlo1qwZjh49iuXLl6Nz58653q7mWfTo0QNjx47Fq6++ivfeew8PHjzAwoULUaFCBZMLVaZMmYIDBw6gXbt2CAgIQFxcHBYsWICSJUuiSZMmuR7/s88+Q9u2bdGwYUMMGDAADx8+xLx58+Dh4fHEt6WtpdVqMX78+Kfu1759e0yZMgX9+vVDo0aNcPr0aaxevRplypQx2a9s2bIoXLgwFi1aBDc3N7i6uqJBgwYIDAy0KNeePXuwYMECTJo0yXhroKVLl6J58+aYMGECZs6c+cTnd+rUCR9//DH0er1xre7TjBkzBps3b0b79u3Rt29f1KlTBykpKTh9+jR+/PFHXL9+HUWLFsXAgQORkJCAli1bomTJkvj7778xb9481KxZ09j9q1mzJhwcHDBjxgwkJSVBp9OhZcuWOa4JvXTpElq1aoXu3bujcuXKcHR0xMaNGxEbG2vsHru7u2PhwoV46623ULt2bfTo0QPFihVDVFQUfv31VzRu3BhfffUVgEe3DAKA9957D23atIGDg4NJF3rXrl3o0KED11QSPa/seu05kQpdunRJDBo0SJQuXVo4OTkJNzc30bhxYzFv3jyRmppq3C8jI0OEhoaKwMBAUaBAAeHv7y9CQkJM9hHi0S2F2rVrZ3aex29lk9sthYQQYufOnaJq1arCyclJVKxYUaxatcrslkK7d+8WnTp1En5+fsLJyUn4+fmJN954w+Q2NTndUkgIIX777TfRuHFj4eLiItzd3UWHDh3EuXPnTPbJPt/jtyxaunSpACAiIyNznVMhTG8plJvcbin0/vvvC19fX+Hi4iIaN24sDh8+nOOtgH7++WdRuXJl4ejoaPI6mzVrJqpUqZLjOf99HL1eLwICAkTt2rVFRkaGyX6jRo0SWq1WHD58+ImvITY2Vjg6OoqVK1fmus/jtxQS4tGte0JCQkS5cuWEk5OTKFq0qGjUqJGYNWuWSE9PF0II8eOPP4rWrVuL4sWLCycnJ1GqVCnx9ttvi9u3b5sca8mSJaJMmTLCwcHhibcXunv3rhg6dKgICgoSrq6uwsPDQzRo0ECsX7/ebN+9e/eKNm3aCA8PD+Hs7CzKli0r+vbtK44dO2bcJzMzUwwfPlwUK1ZMaDQak+/P8+fPCwDit99+e+L8EZG8NELwow2IiJQ0YMAAXLp0Cb///ru9o6jGyJEjceDAAURERLBTSfScYlFJRKSwqKgoVKhQAbt370bjxo3tHcfu4uPjERAQgPXr19t0nS4R2ReLSiIiIiKyGq/+JiIiIiKrsagkIiIiIquxqCQiIiIiq7GoJCIiIiKrPfc3PzcYDLh16xbc3Nx4GwsiIiJJCCFw//59+Pn5QatVVw8sNTUV6enpNj2Hk5MTnJ2dbXoOpT33ReWtW7fg7+9v7xhERET0DKKjo1GyZEl7xzBKTU2Fi5sXkPnApufx8fFBZGSkVIXlc19Uurm5AQD+uhgJN7e8fWSaPRTUPff/K4iIiPLsvl6PcoH+xt/japGeng5kPoCuch/Awck2J8lKR8y55UhPT2dRqSbZb3m7ubnn+XN47YFFJRERkTnVLl1zdIbGRkWl0Kjr7f68kjM1EREREakK22NEREREltIAsFUXVaXN2adhp5KIiIiIrMZOJREREZGlNNpHm62OLSE5UxMRERGRqrBTSURERGQpjcaGayrlXFTJTiURERERWY2dSiIiIiJLcU2lGTlTExEREZGqsFNJREREZCmuqTTDTiURERERWY2dSiIiIiKL2XBNpaQ9PzlT28ntO4kYPmUlqrzyEcq2HINWvWfg1IUoe8fK0ZL1+1G940T4NB6J4L6fIeLsdXtHMsOMypEhJzMqQ4aMgBw5mVE5suQk25KiqJw/fz5Kly4NZ2dnNGjQAEePHs33DIn6B+j87pdwdHTAqllvY++qcZg4rBM83Arme5an2bAzAuPnbMTYgW2xb+VYVC1fAl2Hz8edhPv2jmbEjMqRISczKkOGjIAcOZlRObLkVFz2mkpbbRJSfVG5bt06jB49GpMmTcLx48dRo0YNtGnTBnFxcfmaY8Hq3fArXgRffNQTtSoHoJSfF5rVD0LpEkXzNUdeLFizB707N0Kvjg0RVMYXs0N6oKCzE1ZtPmzvaEbMqBwZcjKjMmTICMiRkxmVI0tOsj3VF5WzZ8/GoEGD0K9fP1SuXBmLFi1CwYIF8d133+Vrjp1/nEH1IH8MHr8U1duPR+t+n2G1Cv/CpGdk4uSFaDSvX9E4ptVq0ax+RYSfjrRjsn8wo3JkyMmMypAhIyBHTmZUjiw5bSL7PpW22iSk6tTp6emIiIhAcHCwcUyr1SI4OBiHD+dvQRd1Kx4rN/2BQP9iWDP7HfTu3BgT52zA+m35/1b8k8QnJiMry4Binm4m48U83REXr7dTKlPMqBwZcjKjMmTICMiRkxmVI0vO592BAwfQoUMH+Pn5QaPRYNOmTcbHMjIyMHbsWFSrVg2urq7w8/ND7969cevWLZNjJCQkoFevXnB3d0fhwoUxYMAAJCcnW5RD1UXl3bt3kZWVBW9vb5Nxb29vxMTE5PictLQ06PV6k00JBoNA1QolEfJ2e1StUBJvdmqEnh1fwMpNfyhyfCIiIpKIitZUpqSkoEaNGpg/f77ZYw8ePMDx48cxYcIEHD9+HBs2bMDFixfRsWNHk/169eqFs2fPYteuXdiyZQsOHDiAwYMHW5TjubulUFhYGEJDQxU/bnEvd1Qo7WMyVi7AG1v3/aX4uazhVbgQHBy0Zguk7yToUdzL3U6pTDGjcmTIyYzKkCEjIEdOZlSOLDmfd23btkXbtm1zfMzDwwO7du0yGfvqq69Qv359REVFoVSpUjh//jy2b9+O8PBw1K1bFwAwb948vPLKK5g1axb8/PzylEPVncqiRYvCwcEBsbGxJuOxsbHw8fHJ8TkhISFISkoybtHR0YpkqVctEFejTC8OuhZ9ByV8iihyfKU4FXBEzSB/7A+/aBwzGAw4EH4J9aoF2jHZP5hROTLkZEZlyJARkCMnMypHlpw2IfGayqSkJGg0GhQuXBgAcPjwYRQuXNhYUAJAcHAwtFot/vzzzzwfV9WdSicnJ9SpUwe7d+9G586dATz6Zt29ezeGDRuW43N0Oh10Op3iWQa93hyd3pmDuSt2oUPLmjh5LgqrNx/GzA+7K34uaw3p2RJDQleiVqVSqF2lNBZ+vxcpD9PQq8ML9o5mxIzKkSEnMypDhoyAHDmZUTmy5JTR40v4lKhxUlNTMXbsWLzxxhtwd3/UTY6JiUHx4sVN9nN0dISnp2euyw1zouqiEgBGjx6NPn36oG7duqhfvz7mzJmDlJQU9OvXL19z1KxUCt9MH4BPF2/BnGU74O/ridD3XkWX1nWf/uR81qV1HdxNTMb0xb8iLv4+qlUogR/nDlXVWxHMqBwZcjKjMmTICMiRkxmVI0tOxeXDZ3/7+/ubDE+aNAmTJ09+5sNmZGSge/fuEEJg4cKF1iTMkUYIIRQ/qsK++uorfPbZZ4iJiUHNmjUxd+5cNGjQIE/P1ev18PDwQOSteGNFrkYFdaqv74mIiPKNXq+Ht5cHkpKSVPX7O7uu0L3wITSOyr8zCgAiMw1pR2YiOjra5LXnpVOp0WiwceNG4zu82bILymvXrmHPnj3w8vIyPvbdd9/h/fffx71794xjmZmZcHZ2xg8//IBXX301T7mlqGSGDRuW69vdRERERPnOlmsf/39cd3d3RQrq7ILy8uXL2Lt3r0lBCQANGzZEYmIiIiIiUKdOHQDAnj17YDAY8tzEAyQpKomIiIhURaOxYVFp2dvqycnJuHLlivHryMhInDx5Ep6envD19cVrr72G48ePY8uWLcjKyjKuk/T09ISTkxMqVaqEl19+GYMGDcKiRYuQkZGBYcOGoUePHnm+8htgUUlEREQktWPHjqFFixbGr0ePHg0A6NOnDyZPnozNmzcDAGrWrGnyvL1796J58+YAgNWrV2PYsGFo1aoVtFotunbtirlz51qUg0UlERERkaW0mkebrY5tgebNm+NJl8jk5fIZT09PrFmzxqLzPk7V96kkIiIiIjmwU0lERERkqXy4UEc2cqYmIiIiIlVhp5KIiIjIUvlw83PZsFNJRERERFZjp5KIiIjIUlxTaUbO1ERERESkKuxUEhEREVmKayrNsFNJRERERFZjp5KIiIjIUlxTaUbO1ERERESkKv+ZTmVBnSMK6tT7clNSM+0dIU9cndU7h0RERPmGayrNsFNJRERERFZj24mIiIjIUlxTaUbO1ERERESkKuxUEhEREVmKayrNsFNJRERERFZjp5KIiIjIYjZcUylpz0/O1ERERESkKuxUEhEREVmKayrNsFNJRERERFZjp5KIiIjIUhqNDe9TyU4lEREREf1HsVNJREREZCl+oo4ZOVMTERERkaqwU0lERERkKV79bYZFpYWWrN+Peat2Iy5ej6rlS2DGmG6oU6W0vWMZvdAtFDdi7pmN93m1CT4Z/ZodEuVO7XMJyJERkCMnMypDhoyAHDmZUTmy5CTb4tvfFtiwMwLj52zE2IFtsW/lWFQtXwJdh8/HnYT79o5m9OvX7+P4pinG7fsv3gUAtGtRw87JTMkwlzJkBOTIyYzKkCEjIEdOZlSOLDkVl72m0labhFSf+sCBA+jQoQP8/Pyg0WiwadMmu2VZsGYPenduhF4dGyKojC9mh/RAQWcnrNp82G6ZHudVpBCKe7kbt98OnUVAiaJoWLOcvaOZkGEuZcgIyJGTGZUhQ0ZAjpzMqBxZciou++1vW20SUn1RmZKSgho1amD+/Pl2zZGekYmTF6LRvH5F45hWq0Wz+hURfjrSjslyl56RiQ07I9DjlQbQqOgbVIa5lCEjIEdOZlSGDBkBOXIyo3JkyUn5Q/VrKtu2bYu2bdvaOwbiE5ORlWVAMU83k/Finu64fD3WTqmebMfvp6FPfohur9S3dxQTMsylDBkBOXIyozJkyAjIkZMZlSNLTpvgLYXMqL6otFRaWhrS0tKMX+v1ejumsa+1W46gRYNK8CnqYe8oRERE9JyTsxR+grCwMHh4eBg3f39/RY7rVbgQHBy0ZguP7yToUdzLXZFzKOlGTAJ+j7iEN9q/YO8oZmSYSxkyAnLkZEZlyJARkCMnMypHlpw2wTWVZp67ojIkJARJSUnGLTo6WpHjOhVwRM0gf+wPv2gcMxgMOBB+CfWqBSpyDiWt2/onihZ2Q6uGle0dxYwMcylDRkCOnMyoDBkyAnLkZEblyJKT8sdz9/a3TqeDTqezybGH9GyJIaErUatSKdSuUhoLv9+LlIdp6NVBXd1Ag8GA9VuP4rW29eDo6GDvODmSYS5lyAjIkZMZlSFDRkCOnMyoHFlyKk2j0djuIlhJO5XPXVFpS11a18HdxGRMX/wr4uLvo1qFEvhx7lDVtfh/P3YJN2PvoccrDewdJVcyzKUMGQE5cjKjMmTICMiRkxmVI0tOsj2NEELYO8STJCcn48qVKwCAWrVqYfbs2WjRogU8PT1RqlSppz5fr9fDw8MDsfFJcHdX7zd4SmqmvSPkiasz/x1CRES2p9fr4e3lgaQkdf3+zq4rXDrOh6aAi03OITIe4uHmoap77U+j+grh2LFjaNGihfHr0aNHAwD69OmDZcuW2SkVEREREf2b6ovK5s2bQ+XNVCIiIvqv0fx/s9WxJfTcXf1NRERERPlP9Z1KIiIiIrXh1d/m2KkkIiIiIquxU0lERERkIXYqzbFTSURERERWY6eSiIiIyELsVJpjp5KIiIiIrMZOJREREZGF2Kk0x04lEREREVmNnUoiIiIiS/ETdcywU0lEREREVmOnkoiIiMhCXFNpjp1KIiIiIrIaO5VEREREFtJoYMNOpW0Oa2ssKlXC1VmO/xUP0jLtHeGpCurkmEsiIqLnCX/7EhEREVlIAxuuqZS0Vck1lURERERkNXYqiYiIiCzEq7/NsVNJRERERFZjp5KIiIjIUvxEHTMsKomIiIgsZcO3vwXf/iYiIiKi/yp2KomIiIgsZMsLdWx3qyLbYqeSiIiIiKzGTiURERGRhdipNMdOJRERERFZjZ1KIiIiIkvxlkJm2KkkIiIiIquxU0lERERkIa6pNMdOpYWWrN+P6h0nwqfxSAT3/QwRZ6/bO1KO1J7z9p1EDJ+yElVe+QhlW45Bq94zcOpClL1jmVH7PGaTISczKkOGjIAcOZlRObLkfF4dOHAAHTp0gJ+fHzQaDTZt2mTyuBACEydOhK+vL1xcXBAcHIzLly+b7JOQkIBevXrB3d0dhQsXxoABA5CcnGxRDrsWlUpMQn7asDMC4+dsxNiBbbFv5VhULV8CXYfPx52E+3bLlBO150zUP0Dnd7+Eo6MDVs16G3tXjcPEYZ3g4VbQ3tFMqH0es8mQkxmVIUNGQI6czKgcWXIqLbtTaavNEikpKahRowbmz5+f4+MzZ87E3LlzsWjRIvz5559wdXVFmzZtkJqaatynV69eOHv2LHbt2oUtW7bgwIEDGDx4sEU57FpUKjEJ+WnBmj3o3bkRenVsiKAyvpgd0gMFnZ2wavNhu+TJjdpzLli9G37Fi+CLj3qiVuUAlPLzQrP6QShdoqi9o5lQ+zxmkyEnMypDhoyAHDmZUTmy5HyetW3bFtOmTcOrr75q9pgQAnPmzMH48ePRqVMnVK9eHStWrMCtW7eMzbzz589j+/bt+Oabb9CgQQM0adIE8+bNw9q1a3Hr1q0857BrUWntJOSn9IxMnLwQjeb1KxrHtFotmtWviPDTkfmeJzcy5Nz5xxlUD/LH4PFLUb39eLTu9xlWq+yHjwzzCMiRkxmVIUNGQI6czKgcWXLagpo6lU8SGRmJmJgYBAcHG8c8PDzQoEEDHD786Hfv4cOHUbhwYdStW9e4T3BwMLRaLf788888n0u1ayrzMgn5KT4xGVlZBhTzdDMZL+bpjrh4fb7nyY0MOaNuxWPlpj8Q6F8Ma2a/g96dG2PinA1Yv+2ovaMZyTCPgBw5mVEZMmQE5MjJjMqRJaes9Hq9yZaWlmbxMWJiYgAA3t7eJuPe3t7Gx2JiYlC8eHGTxx0dHeHp6WncJy9Ue/V3XiYhJ2lpaSaTrtfzm1ptDAaB6kH+CHm7PQCgaoWSuBh5Gys3/YHubevbOR0REdHT5cfV3/7+/ibjkyZNwuTJk21yTiWotqh8VmFhYQgNDVX8uF6FC8HBQWu28PhOgh7FvdwVP9+zkiFncS93VCjtYzJWLsAbW/f9ZadE5mSYR0COnMyoDBkyAnLkZEblyJJTVtHR0XB3/2cedTqdxcfw8Xn0+zY2Nha+vr7G8djYWNSsWdO4T1xcnMnzMjMzkZCQYHx+Xqj27e9/T8K/xcbGPvEFhoSEICkpybhFR0crksepgCNqBvljf/hF45jBYMCB8EuoVy1QkXMoQYac9aoF4mqU6Tfvteg7KOFTxE6JzMkwj4AcOZlRGTJkBOTIyYzKkSWnTWhsvAFwd3c32Z6lqAwMDISPjw92795tHNPr9fjzzz/RsGFDAEDDhg2RmJiIiIgI4z579uyBwWBAgwYN8nwu1XYq/z0J2ZV09iS8++67uT5Pp9M906TnxZCeLTEkdCVqVSqF2lVKY+H3e5HyMA29Orxgk/M9K7XnHPR6c3R6Zw7mrtiFDi1r4uS5KKzefBgzP+xu72gm1D6P2WTIyYzKkCEjIEdOZlSOLDmfZ8nJybhy5Yrx68jISJw8eRKenp4oVaoURo4ciWnTpqF8+fIIDAzEhAkT4Ofnh86dOwMAKlWqhJdffhmDBg3CokWLkJGRgWHDhqFHjx7w8/PLcw67FpXWTkJ+69K6Du4mJmP64l8RF38f1SqUwI9zh6quxa/2nDUrlcI30wfg08VbMGfZDvj7eiL0vVfRpXXdpz85H6l9HrPJkJMZlSFDRkCOnMyoHFlyKk1Nn6hz7NgxtGjRwvj16NGjAQB9+vTBsmXL8OGHHyIlJQWDBw9GYmIimjRpgu3bt8PZ2dn4nNWrV2PYsGFo1aoVtFotunbtirlz51qWWwghLHqGgvbt22cyCdmyJ0EIgUmTJuHrr782TsKCBQtQoUKFPJ9Dr9fDw8MDsfFJJusS6Nk8SMu0d4SnKqhTbQOeiIjySK/Xw9vLA0lJ6vr9nV1X+PRfBa2TbT60w5D+ADHfvam61/40dv3t27x5czypptVoNJgyZQqmTJmSj6mIiIiInkxNnUq1UO2FOkREREQkD75PSERERGQhdirNsVNJRERERFZjp5KIiIjIUv+6n6RNji0hdiqJiIiIyGrsVBIRERFZiGsqzbFTSURERERWY6eSiIiIyELsVJpjp5KIiIiIrMZOJREREZGFNLBhp1LSy79ZVBIRERFZiG9/m+Pb30RERERkNXYqiYiIiCzFm5+bYaeSiIiIiKzGTiVZpKBO/d8yKamZ9o7wVK7O6p9HIiLKHddUmmOnkoiIiIisxnYJERERkYXYqTTHTiURERERWY2dSiIiIiILaTSPNlsdW0bsVBIRERGR1dipJCIiIrLQo06lrdZU2uSwNsdOJRERERFZjZ1KIiIiIkvZcE0lP1GHiIiIiP6z2KkkIiIishDvU2mOnUoiIiIisho7lUREREQW4n0qzbFTSURERERWY6eSiIiIyEJarQZarW1aisJGx7U1FpUWWrJ+P+at2o24eD2qli+BGWO6oU6V0vaOZUaGnGrO+EK3UNyIuWc23ufVJvhk9Gt2SPRkap7LbMyoDBkyAnLkZEblyJKTbMuub38fOHAAHTp0gJ+fHzQaDTZt2mTy+IYNG9C6dWt4eXlBo9Hg5MmTdslpzLMzAuPnbMTYgW2xb+VYVC1fAl2Hz8edhPt2zfU4GXKqPeOvX7+P45umGLfvv3gXANCuRQ07JzOn9rkEmFEpMmQE5MjJjMqRJafSstdU2mqTkV2LypSUFNSoUQPz58/P9fEmTZpgxowZ+ZwsZwvW7EHvzo3Qq2NDBJXxxeyQHijo7IRVmw/bO5oJGXKqPaNXkUIo7uVu3H47dBYBJYqiYc1y9o5mRu1zCTCjUmTICMiRkxmVI0tOsj27FpVt27bFtGnT8Oqrr+b4+FtvvYWJEyciODg4n5OZS8/IxMkL0Whev6JxTKvVoln9igg/HWnHZKZkyClDxn9Lz8jEhp0R6PFKA9XdO0yGuWRGZciQEZAjJzMqR5actpB9n0pbbTLi1d95FJ+YjKwsA4p5upmMF/N0R1y83k6pzMmQU4aM/7bj99PQJz9Et1fq2zuKGRnmkhmVIUNGQI6czKgcWXJS/njuLtRJS0tDWlqa8Wu9nt/UZJ21W46gRYNK8CnqYe8oRESkErxPpbnnrlMZFhYGDw8P4+bv76/Icb0KF4KDg9Zs4fGdBD2Ke7krcg4lyJBThozZbsQk4PeIS3ij/Qv2jpIjGeaSGZUhQ0ZAjpzMqBxZclL+eO6KypCQECQlJRm36OhoRY7rVMARNYP8sT/8onHMYDDgQPgl1KsWqMg5lCBDThkyZlu39U8ULeyGVg0r2ztKjmSYS2ZUhgwZATlyMqNyZMlpC1xTae65e/tbp9NBp9PZ5NhDerbEkNCVqFWpFGpXKY2F3+9FysM09Oqgri6WDDllyGgwGLB+61G81rYeHB0d7B0nVzLMJTMqQ4aMgBw5mVE5suQk27NrUZmcnIwrV64Yv46MjMTJkyfh6emJUqVKISEhAVFRUbh16xYA4OLFR/8S8vHxgY+PT77n7dK6Du4mJmP64l8RF38f1SqUwI9zh6quxS9DThky/n7sEm7G3kOPVxrYO8oTyTCXzKgMGTICcuRkRuXIklNptuwoytqp1AghhL1Ovm/fPrRo0cJsvE+fPli2bBmWLVuGfv36mT0+adIkTJ48OU/n0Ov18PDwQGx8Etzdn+9vcHokJTXT3hGeytX5uXuTgIhIUXq9Ht5eHkhKUtfv7+y6osrYn+Ggc7XJObLSUnB2RifVvfansetvtubNm+NJNW3fvn3Rt2/f/AtERERElAe8+tsc2yVEREREFtLAhm9/Q86q8rm7+puIiIiI8h87lUREREQW4tvf5tipJCIiIiKrsVNJREREZCHeUsgcO5VEREREZDV2KomIiIgsxDWV5tipJCIiIiKrsVNJREREZCGuqTTHTiURERERWY2dSiIiIiILcU2lOXYqiYiIiMhq7FQSERERWYhrKs2xU0lEREREVmOnkp47rs7q/7auM2mnvSPkSURoa3tHICJSJxuuqYScjUp2KomIiIjIeupv6RARERGpDNdUmmOnkoiIiIisxk4lERERkYV4n0pz7FQSERERkdXYqSQiIiKyENdUmmOnkoiIiIisxk4lERERkYW4ptIcO5VEREREZDV2KomIiIgsxDWV5tipJCIiIiKrsagkIiIislB2p9JWW15lZWVhwoQJCAwMhIuLC8qWLYupU6dCCGHcRwiBiRMnwtfXFy4uLggODsbly5cVnxMWlURERESSmjFjBhYuXIivvvoK58+fx4wZMzBz5kzMmzfPuM/MmTMxd+5cLFq0CH/++SdcXV3Rpk0bpKamKpqFayqJiIiILKSWq78PHTqETp06oV27dgCA0qVL4/vvv8fRo0cBPOpSzpkzB+PHj0enTp0AACtWrIC3tzc2bdqEHj16KJabnUoLLVm/H9U7ToRP45EI7vsZIs5et3ekHMmQkxktV9DJAe+/XBFbRr2IP8a3wncD6qOyn7vJPu+0KIsdHzTDH+NbYUHvOvD3LGintKbUNpc5YUblyJCTGZUjS04l5cfb33q93mRLS0szy9GoUSPs3r0bly5dAgCcOnUKBw8eRNu2bQEAkZGRiImJQXBwsPE5Hh4eaNCgAQ4fPqzonLCotMCGnREYP2cjxg5si30rx6Jq+RLoOnw+7iTct3c0EzLkZMZnM6FTFTQo64UJG87g9QWHcORqPBb2qYNibjoAQJ8mpdGjQSlM/+Uc+iz5Ew8zsvDVW7Xh5Gjfv+pqnMvHMaNyZMjJjMqRJaeM/P394eHhYdzCwsLM9hk3bhx69OiBoKAgFChQALVq1cLIkSPRq1cvAEBMTAwAwNvb2+R53t7exseUovqiMiwsDPXq1YObmxuKFy+Ozp074+LFi3bJsmDNHvTu3Ai9OjZEUBlfzA7pgYLOTli1WdlK31oy5GRGy+kctWhZqTjm7ryEE3/fw42Eh/h631VEJzzEa/X8AQA9XwjAtweuYf/FO7gSm4xJG86gmJsOzYOK2yVzNrXNZU6YUTky5GRG5ciSU2nZb3/bagOA6OhoJCUlGbeQkBCzHOvXr8fq1auxZs0aHD9+HMuXL8esWbOwfPnyfJ4RCYrK/fv3Y+jQoThy5Ah27dqFjIwMtG7dGikpKfmaIz0jEycvRKN5/YrGMa1Wi2b1KyL8dGS+ZnkSGXIy47Nx0Grg6KBFWqbBZDwtIws1SxVGiSIuKOqmw5/XEoyPJadl4szNJFT398jvuEZqnMvHMaNyZMjJjMqRJaes3N3dTTadTme2z5gxY4zdymrVquGtt97CqFGjjF1NHx8fAEBsbKzJ82JjY42PKUX1ReX27dvRt29fVKlSBTVq1MCyZcsQFRWFiIiIfM0Rn5iMrCwDinm6mYwX83RHXLw+X7M8iQw5mfHZPEjPwqmoRAxsVgZF3XTQaoC21X1Rzb8wirrp4FXICQCQkGy65iYhOR1ehcx/EOUXNc7l45hROTLkZEblyJLTFtRyS6EHDx5AqzUt5xwcHGAwPGpABAYGwsfHB7t37zY+rtfr8eeff6Jhw4bKTMb/SXf1d1JSEgDA09Mzx8fT0tJMFrLq9c/3NzX9t0zccBoTO1fBjg+aITPLgAu372PH6duo9NjFOkRE9N/QoUMHfPLJJyhVqhSqVKmCEydOYPbs2ejfvz+AR8XvyJEjMW3aNJQvXx6BgYGYMGEC/Pz80LlzZ0WzSFVUGgwGjBw5Eo0bN0bVqlVz3CcsLAyhoaGKn9urcCE4OGjNFh7fSdCjuJd6fqHLkJMZn92New8xeOkxOBdwQCGdA+4mpyOsW3XcvPcQ8cnpAADPQjrc/f9/P/raCZdi7LdgXq1z+W/MqBwZcjKjcmTJaQsa2PCWQhbsO2/ePEyYMAFDhgxBXFwc/Pz88Pbbb2PixInGfT788EOkpKRg8ODBSExMRJMmTbB9+3Y4Ozsrmlv1b3//29ChQ3HmzBmsXbs2131CQkJMFrVGR0crcm6nAo6oGeSP/eH/XCRkMBhwIPwS6lULVOQcSpAhJzNaLzUjC3eT0+Hm7IiGZb2w70Icbt57iLv301C/zD9dfFedA6qW8MBf0Ul2y6r2uQSYUUky5GRG5ciS83nm5uaGOXPm4O+//8bDhw9x9epVTJs2DU5OTsZ9NBoNpkyZgpiYGKSmpuK3335DhQoVFM8iTady2LBh2LJlCw4cOICSJUvmup9Op8txIasShvRsiSGhK1GrUinUrlIaC7/fi5SHaejV4QWbnO9ZyZCTGZ9Nw7JegAb4++4D+Hu6YETrCrh+NwW/nLgFAFhz5G8MaFoGUfEPcOveQ7zbshzu3E/DvgtxdssMqHMuH8eMypEhJzMqR5acStNqNNDaqFVpq+PamuqLSiEEhg8fjo0bN2Lfvn0IDLTfv3y6tK6Du4nJmL74V8TF30e1CiXw49yhqmvxy5CTGZ9NIWdHDAsuj+LuztA/zMDuc7FYsPsKMg2PPuN1+cHrcCnggI87VIabsyNORiVi+KrjSH/sivH8psa5fBwzKkeGnMyoHFlyku1pxL8/cVyFhgwZgjVr1uDnn39GxYr/3LLAw8MDLi4uT32+Xq+Hh4cHYuOT4O7Ob3BShzqTdto7Qp5EhLa2dwQi+o/S6/Xw9vJAUpK6fn9n1xUtPvsNji6uNjlH5sMU7B0TrLrX/jSqX1O5cOFCJCUloXnz5vD19TVu69ats3c0IiIiIvo/Kd7+JiIiIlITS+8naemxZaT6TiURERERqZ/qO5VEREREaqPVPNpsdWwZsVNJRERERFZjp5KIiIjIUhobrn1kp5KIiIiI/qvYqSQiIiKykEZjw8/+ZqeSiIiIiP6r2KkkIiIispDm/39sdWwZsVNJRERERFZjp5KIiIjIQrxPpTl2KomIiIjIauxUEhEREVmIn/1tjp1KIiIiIrIaO5VEREREFuJ9Ks2xqCSyg4jQ1vaOkCcP0jLtHeGpCur4Y4yISA3405iIiIjIQlqNBlobtRRtdVxb45pKIiIiIrIaO5VEREREFuKaSnMsKomIiIgsxFsKmePb30RERERkNXYqiYiIiCzEt7/NsVNJRERERFZjp5KIiIjIQrylkLk8FZWbN2/O8wE7duz4zGGIiIiISE55Kio7d+6cp4NpNBpkZWVZk4eIiIhI9TT/32x1bBnlqag0GAy2zkFEREREErNqTWVqaiqcnZ2VykJEREQkBd6n0pzFV39nZWVh6tSpKFGiBAoVKoRr164BACZMmIBvv/1W8YBEREREpH4WF5WffPIJli1bhpkzZ8LJyck4XrVqVXzzzTeKhiMiIiJSI63GtpuMLC4qV6xYga+//hq9evWCg4ODcbxGjRq4cOGCouHUaMn6/ajecSJ8Go9EcN/PEHH2ur0j5UiGnMyoHLXnvH0nEcOnrESVVz5C2ZZj0Kr3DJy6EGXvWGbUPo+AHBkBOXIyo3JkyUm2ZXFRefPmTZQrV85s3GAwICMjQ5FQ/7Zw4UJUr14d7u7ucHd3R8OGDbFt2zbFz5MXG3ZGYPycjRg7sC32rRyLquVLoOvw+biTcN8ueXIjQ05mVI7acybqH6Dzu1/C0dEBq2a9jb2rxmHisE7wcCto72gm1D6PgBwZATlyMqNyZMmptOw1lbbaZGRxUVm5cmX8/vvvZuM//vgjatWqpUiofytZsiQ+/fRTRERE4NixY2jZsiU6deqEs2fPKn6up1mwZg96d26EXh0bIqiML2aH9EBBZyes2nw437M8iQw5mVE5as+5YPVu+BUvgi8+6olalQNQys8LzeoHoXSJovaOZkLt8wjIkRGQIyczKkeWnGR7FheVEydOxLBhwzBjxgwYDAZs2LABgwYNwieffIKJEycqHrBDhw545ZVXUL58eVSoUAGffPIJChUqhCNHjih+ridJz8jEyQvRaF6/onFMq9WiWf2KCD8dma9ZnkSGnMyoHBly7vzjDKoH+WPw+KWo3n48Wvf7DKtV9stGhnmUISMgR05mVI4sOW0l+/O/ld5kZXFR2alTJ/zyyy/47bff4OrqiokTJ+L8+fP45Zdf8NJLL9kio1FWVhbWrl2LlJQUNGzY0Kbnelx8YjKysgwo5ulmMl7M0x1x8fp8zfIkMuRkRuXIkDPqVjxWbvoDgf7FsGb2O+jduTEmztmA9duO2juakQzzKENGQI6czKgcWXJS/nim+1S++OKL2LVrl9JZcnX69Gk0bNgQqampKFSoEDZu3IjKlSvnuG9aWhrS0tKMX+v1/KYmsieDQaB6kD9C3m4PAKhaoSQuRt7Gyk1/oHvb+nZOR0T0bHifSnPPfPPzY8eO4fz58wAerbOsU6eOYqEeV7FiRZw8eRJJSUn48ccf0adPH+zfvz/HwjIsLAyhoaGKZ/AqXAgODlqzhcd3EvQo7uWu+PmelQw5mVE5MuQs7uWOCqV9TMbKBXhj676/7JTInAzzKENGQI6czKgcWXJS/rD47e8bN27gxRdfRP369TFixAiMGDEC9erVQ5MmTXDjxg1bZISTkxPKlSuHOnXqICwsDDVq1MCXX36Z474hISFISkoybtHR0cpkKOCImkH+2B9+0ThmMBhwIPwS6lULVOQcSpAhJzMqR4ac9aoF4mpUnMnYteg7KOFTxE6JzMkwjzJkBOTIyYzKkSWnLfA+leYsLioHDhyIjIwMnD9/HgkJCUhISMD58+dhMBgwcOBAW2Q0YzAYTN7i/jedTme8/VD2ppQhPVtixaZD+H7LEVyMjMHoT9ch5WEaenV4QbFzKEGGnMyoHLXnHPR6cxw/ex1zV+xC5I072LgzAqs3H0bfLk3sHc2E2ucRkCMjIEdOZlSOLDnJ9ix++3v//v04dOgQKlb850qvihUrYt68eXjxxRcVDQc86jy2bdsWpUqVwv3797FmzRrs27cPO3bsUPxcT9OldR3cTUzG9MW/Ii7+PqpVKIEf5w5VXYtfhpzMqBy156xZqRS+mT4Any7egjnLdsDf1xOh772KLq3r2juaCbXPIyBHRkCOnMyoHFlyKo1rKs1phBDCkidUqFABq1atQv36pgvsjx49ip49e+LKlSuKBhwwYAB2796N27dvw8PDA9WrV8fYsWPzfKW5Xq+Hh4cHYuOTFO1aEv0XPEjLtHeEpyqoe+al4USkYnq9Ht5eHkhKUtfv7+y6oue3h+BUsJBNzpH+IBlrBjRS3Wt/Got/Gn/22WcYPnw45s+fj7p1H3Uajh07hhEjRmDWrFmKB/z2228VPyYRERGRNTT/32x1bBnlqagsUqSISSs2JSUFDRo0gKPjo6dnZmbC0dER/fv3R+fOnW0SlIiIiIjUK09F5Zw5c2wcg4iIiEgeWo0GWhutfbTVcW0tT0Vlnz59bJ2DiIiIiCRm1Qr31NRUpKenm4zJtKCUiIiI6FnY8nO6JW1UWn6fypSUFAwbNgzFixeHq6srihQpYrIRERER0X+PxUXlhx9+iD179mDhwoXQ6XT45ptvEBoaCj8/P6xYscIWGYmIiIhUJfs+lbbaZGTx29+//PILVqxYgebNm6Nfv3548cUXUa5cOQQEBGD16tXo1auXLXISERERkYpZ3KlMSEhAmTJlADxaP5mQkAAAaNKkCQ4cOKBsOiIiIiIVyl5TaatNRhYXlWXKlEFkZCQAICgoCOvXrwfwqINZuHBhRcMRERERqVH2LYVstcnI4qKyX79+OHXqFABg3LhxmD9/PpydnTFq1CiMGTNG8YBEREREpH4Wr6kcNWqU8b+Dg4Nx4cIFREREoFy5cqhevbqi4YiIiIjUiLcUMmfVfSoBICAgAAEBAUpkISIiIiJJ5amonDt3bp4P+N577z1zGCIiIiIZ2PLWP8/1LYW++OKLPB1Mo9GwqCQiIiL6D8pTUZl9tTcR/bcU1Fm9Qsbmzt/U2zvCU1UqwY+vJXreaPEMVztbcGwZyZqbiIiIiFRE/W0IIiIiIpXhmkpz7FQSERERkdXYqSQiIiKykEYDaHmfShPsVBIRERGR1Z6pqPz999/x5ptvomHDhrh58yYAYOXKlTh48KCi4YiIiIjUSKux7SYji4vKn376CW3atIGLiwtOnDiBtLQ0AEBSUhKmT5+ueEAiIiIiUj+Li8pp06Zh0aJFWLJkCQoUKGAcb9y4MY4fP65oOCIiIiI1yr7621abJW7evIk333wTXl5ecHFxQbVq1XDs2DHj40IITJw4Eb6+vnBxcUFwcDAuX76s9JRYXlRevHgRTZs2NRv38PBAYmKiEpmIiIiIKA/u3buHxo0bo0CBAti2bRvOnTuHzz//HEWKFDHuM3PmTMydOxeLFi3Cn3/+CVdXV7Rp0wapqamKZrH46m8fHx9cuXIFpUuXNhk/ePAgypQpo1QuIiIiItWy5dpHS447Y8YM+Pv7Y+nSpcaxwMBA438LITBnzhyMHz8enTp1AgCsWLEC3t7e2LRpE3r06KFcbkufMGjQIIwYMQJ//vknNBoNbt26hdWrV+ODDz7Au+++q1gwIiIiov8yvV5vsmVfx/JvmzdvRt26ddGtWzcUL14ctWrVwpIlS4yPR0ZGIiYmBsHBwcYxDw8PNGjQAIcPH1Y0r8WdynHjxsFgMKBVq1Z48OABmjZtCp1Ohw8++ADDhw9XNBwRERGRGmk0trufZPZx/f39TcYnTZqEyZMnm4xdu3YNCxcuxOjRo/HRRx8hPDwc7733HpycnNCnTx/ExMQAALy9vU2e5+3tbXxMKRYXlRqNBh9//DHGjBmDK1euIDk5GZUrV0ahQoUUDUZERET0XxYdHQ13d3fj1zqdzmwfg8GAunXrGu/AU6tWLZw5cwaLFi1Cnz598i0rYMUn6jg5OaFy5cpKZiEiIiKSglajgdZGrcrs47q7u5sUlTnx9fU1q8cqVaqEn376CcCja2EAIDY2Fr6+vsZ9YmNjUbNmTQVTP0NR2aJFiyde6r5nzx6rAqndkvX7MW/VbsTF61G1fAnMGNMNdaqUtncsMzLkZEblyJBTTRlX/LgP+46cRdSNO3DSFUC1iqUwpM/LCChRzGS/0xeisHj1Tpy7FA2tVovygb6YM6kfdLoCuRzZ9tQ0j08iQ05mVI4sOZ9HjRs3xsWLF03GLl26hICAAACPLtrx8fHB7t27jUWkXq/Hn3/+qfi1MBZfqFOzZk3UqFHDuFWuXBnp6ek4fvw4qlWrpmi4x3366afQaDQYOXKkTc+Tmw07IzB+zkaMHdgW+1aORdXyJdB1+HzcSbhvlzy5kSEnMypHhpxqy3jibCS6tn0BX898F19O7o/MLANGTl6Kh6npxn1OX4jC6ClLUb9meXzz2RB8O2sIXnvlBWjs+FEXapvH3MiQkxmVI0tOpWltvOXVqFGjcOTIEUyfPh1XrlzBmjVr8PXXX2Po0KEAYKybpk2bhs2bN+P06dPo3bs3/Pz80LlzZ+sm4TEWF5VffPGFyfbVV1/h4MGDGDlypMnN0JUWHh6OxYsXo3r16jY7x9MsWLMHvTs3Qq+ODRFUxhezQ3qgoLMTVm1W9uopa8mQkxmVI0NOtWX8YlI/tGtVB2VKeaN8oC/Gv9cVsXcSceHqTeM+c7/7Fd3aNULvrs1QppQ3AkoUQ6sm1eFU4JlXDVlNbfOYGxlyMqNyZMn5vKpXrx42btyI77//HlWrVsXUqVMxZ84c9OrVy7jPhx9+iOHDh2Pw4MGoV68ekpOTsX37djg7Oyua5Zk++zsnb775Jr777julDmciOTkZvXr1wpIlS0xu5pmf0jMycfJCNJrXr2gc02q1aFa/IsJPR9olU05kyMmMypEhpwwZUx48uk2HeyEXAEBCYjLOXopGEQ9XDB67CO36fIIhH3+NU+eu2y2jDPMIyJGTGZUjS05byL7621abJdq3b4/Tp08jNTUV58+fx6BBgx7LqsGUKVMQExOD1NRU/Pbbb6hQoYKCs/GIYkXl4cOHFa94sw0dOhTt2rUzucdSfotPTEZWlgHFPN1Mxot5uiMuXm+nVOZkyMmMypEhp9ozGgwGzPl2C6pXCkDZgEcL2m/FJgAAvl23Gx1b18PsSf1QsUwJvDfxW0TfumuXnGqfx2wy5GRG5ciSk/KHxe/jdOnSxeRrIQRu376NY8eOYcKECYoFy7Z27VocP34c4eHhedo/LS3N5Oagej2/qYkod59/vRnX/o7ForC3jWNCCABA59b10b5VHQBAxTJ+OPbXVWzZHYF332pjl6xEpB5a2PDqb9hv7bY1LC4qPTw8TL7WarWoWLEipkyZgtatWysWDHh0f6YRI0Zg165dee6ChoWFITQ0VNEcAOBVuBAcHLRmC4/vJOhR3OvJl/vnJxlyMqNyZMip5oyff70Zf4RfxILpg1C86D8/27yKPOq6lPYvbrJ/6ZLFEHsnMT8jGql5Hv9NhpzMqBxZclL+sOjt76ysLPTr1w+zZ8/G0qVLsXTpUnz77bf49NNPFS8oASAiIgJxcXGoXbs2HB0d4ejoiP3792Pu3LlwdHREVlaW2XNCQkKQlJRk3KKjoxXJ4lTAETWD/LE//J/L9g0GAw6EX0K9aoFPeGb+kiEnMypHhpxqzCiEwOdfb8b+I+cwb+oA+Hl7mjzuW7wIinq6I+qm6VvdUbfuwqdY4XxM+g81zmNOZMjJjMqRJactqGlNpVpY1Kl0cHBA69atcf78+Xy5YKZVq1Y4ffq0yVi/fv0QFBSEsWPHwsHBwew5Op0uxzvOK2FIz5YYEroStSqVQu0qpbHw+71IeZiGXh1esMn5npUMOZlROTLkVFvGWYs3Y9eBU5jx0Zso6KJD/L1HXZZCBZ2h0xWARqNBr84v4pu1v6FcoA8qBPph657j+PvmHXzyYU+7ZAbUN4+5kSEnMypHlpxkexa//V21alVcu3YNgYG2/xeIm5sbqlatajLm6uoKLy8vs/H80KV1HdxNTMb0xb8iLv4+qlUogR/nDlVdi1+GnMyoHBlyqi3jxu1/AgCGjv/GZPzj4V3R7v9rKF/v2BhpGZmY++1W6JMfoFxpX3w5uT9K+nrle95sapvH3MiQkxmVI0tOpWk1jzZbHVtGGpG9Ij2Ptm/fjpCQEEydOhV16tSBq6uryeNP+zghazVv3hw1a9bEnDlz8rS/Xq+Hh4cHYuOTbJ6NiPLf+ZvqvxivUgn+7CGylF6vh7eXB5KS1PX7O7uuCNl4HM6ubk9/wjNITbmPsFdrq+61P02eO5VTpkzB+++/j1deeQUA0LFjR5OPaxRCQKPR5LjOUUn79u2z6fGJiIiIyHJ5LipDQ0PxzjvvYO/evbbMQ0RERKR6tryg5rm/UCf7XfJmzZrZLAwRERERycmiC3U0spbORERERArihTrmLCoqK1So8NTCMiEhwapARERERCQfi4rK0NBQs0/UISIiIvqv0fz/j62OLSOLisoePXqgePHiT9+RiIiIiP5T8lxUcj0lERER0SNcU2kuz5/9beE90omIiIjoPyTPnUqDwWDLHERERETSYKfSXJ47lUREREREubHoQh0iIiIienStia2uN5H1OhZ2KomIiIjIauxUEhEREVmIayrNsVNJRERERFZjp5KIpFaphLu9IzxVp8VH7B0hT35++wV7RyCShkbzaLPVsWXETiURERERWY2dSiIiIiILaTUaaG3UUrTVcW2NnUoiIiIisho7lUREREQW4tXf5tipJCIiIiKrsVNJREREZCkbXv0NdiqJiIiI6L+KnUoiIiIiC2mhgdZGLUVbHdfW2KkkIiIiIquxU0lERERkIX6ijjl2KomIiIjIauxUEhEREVmI96k0x04lEREREVmNnUoiIiIiC/Gzv82xqLTQkvX7MW/VbsTF61G1fAnMGNMNdaqUtncsMzLkZEblyJCTGS3zdc9a8HbTmY1vPRuDjSdvY0mvWjk+b8auSzh0LcHW8Z5KTXOZG2ZUjiw5lcQLdczx7W8LbNgZgfFzNmLswLbYt3IsqpYvga7D5+NOwn17RzMhQ05mVI4MOZnRch9sOI0+KyKM28Qt5wAAf1xNwN2UNJPH+qyIwJrwaDxMz8LxqES75P03tc1lTphRObLkJNtTfVE5efJkaDQaky0oKMguWRas2YPenRuhV8eGCCrji9khPVDQ2QmrNh+2S57cyJCTGZUjQ05mtJw+NROJDzOMW92AIridlIozt/UwCJg8lvgwAy8EeuLgtXikZhrskvff1DaXOWFG5ciSU2laaIxvgSu+8ebntlOlShXcvn3buB08eDDfM6RnZOLkhWg0r1/ROKbVatGsfkWEn47M9zy5kSEnMypHhpzMaD1HrQbNyxXFbxfjcny8bFFXlCnqit8u5Px4flL7XALMqCRZclL+kKKodHR0hI+Pj3ErWrRovmeIT0xGVpYBxTzdTMaLebojLl6f73lyI0NOZlSODDmZ0XoNSheBq84Rey7eyfHx4KBiiL73ABdik/M5mTm1zyXAjEqSJactZK+ptNUmIymKysuXL8PPzw9lypRBr169EBUVleu+aWlp0Ov1JhsRkcxeCiqOiOhEJDzIMHvMyUGDpuWKYteFnAtOIqL8ovqiskGDBli2bBm2b9+OhQsXIjIyEi+++CLu3895AXBYWBg8PDyMm7+/vyI5vAoXgoOD1mzh8Z0EPYp7uStyDiXIkJMZlSNDTma0TrFCTqhewgO7zuf81najMl7QOWqx95I6iko1z2U2ZlSOLDltQWvjTUaqz922bVt069YN1atXR5s2bbB161YkJiZi/fr1Oe4fEhKCpKQk4xYdHa1IDqcCjqgZ5I/94ReNYwaDAQfCL6FetUBFzqEEGXIyo3JkyMmM1mlVsTiSHmbgWNS9HB8PDiqO8L/vQZ+amc/JcqbmuczGjMqRJSflD+nuU1m4cGFUqFABV65cyfFxnU4Hnc783m5KGNKzJYaErkStSqVQu0ppLPx+L1IepqFXhxdscr5nJUNOZlSODDmZ8dloALSqWAx7L92BQZg/7uOuQxVfN0zZdiHfsz2JGufyccyoHFlyKi37jjS2OraMpCsqk5OTcfXqVbz11lv5fu4urevgbmIypi/+FXHx91GtQgn8OHeo6lr8MuRkRuXIkJMZn02Nkh4o7qbDb7leoFMc8cnpOBmdlM/JnkyNc/k4ZlSOLDnJ9jRCiBz+/aseH3zwATp06ICAgADcunULkyZNwsmTJ3Hu3DkUK1bsqc/X6/Xw8PBAbHwS3N35DU5E+a/T4iP2jpAnP7/9fHeWSC56vR7eXh5ISlLX7+/sumLR3rNwKeT29Cc8g4fJ9/FOiyqqe+1Po/pO5Y0bN/DGG28gPj4exYoVQ5MmTXDkyJE8FZRERERElD9UX1SuXbvW3hGIiIiITGR/+o2tji0j1V/9TURERETqp/pOJREREZEaydlPtB12KomIiIjIauxUEhEREVnIlp/RLemSSnYqiYiIiMh67FQSERERWYifqGOOnUoiIiIisho7lUREREQW0sJ2nTlZO36y5iYiIiIiFWGnkoiIiMhCXFNpjp1KIiIiIrIaO5VEREREFtLAdp+oI2efkp1KIiIiIlIAO5VEREREFuKaSnMsKomIbOznt1+wd4Q82XU+1t4RnuqlSt72jkBEuWBRSURERGQh3qfSnKy5iYiIiEhFWFQSERERWSh7TaWttmf16aefQqPRYOTIkcax1NRUDB06FF5eXihUqBC6du2K2Fjll7uwqCQiIiKykMbG27MIDw/H4sWLUb16dZPxUaNG4ZdffsEPP/yA/fv349atW+jSpcszniV3LCqJiIiIJJecnIxevXphyZIlKFKkiHE8KSkJ3377LWbPno2WLVuiTp06WLp0KQ4dOoQjR44omoFFJREREZGFNBrbbpYaOnQo2rVrh+DgYJPxiIgIZGRkmIwHBQWhVKlSOHz4sLXTYIJXfxMRERGpkF6vN/lap9NBp9OZ7bd27VocP34c4eHhZo/FxMTAyckJhQsXNhn39vZGTEyMonnZqSQiIiKykBYam24A4O/vDw8PD+MWFhZmliM6OhojRozA6tWr4ezsnN/TYIKdSiIiIiIVio6Ohru7u/HrnLqUERERiIuLQ+3atY1jWVlZOHDgAL766ivs2LED6enpSExMNOlWxsbGwsfHR9G8LCqJiIiILPSsax/zemwAcHd3Nykqc9KqVSucPn3aZKxfv34ICgrC2LFj4e/vjwIFCmD37t3o2rUrAODixYuIiopCw4YNFc3NopKIiIhIUm5ubqhatarJmKurK7y8vIzjAwYMwOjRo+Hp6Ql3d3cMHz4cDRs2xAsvKPsRsiwqiYiIiCyk+f8fWx1bSV988QW0Wi26du2KtLQ0tGnTBgsWLFD0HACLSiIiIqLnyr59+0y+dnZ2xvz58zF//nybnpdFJREREZGF8mNNpWxYVFpoyfr9mLdqN+Li9ahavgRmjOmGOlVK2zuWGRlyMqNyZMjJjMpQW8adu49h554I3LmTCAAoWaIYXuvcFLVqlAMAxMQmYOXa33DhUjQyMzJRo3pZ9H/rZRT2KGS3zNnUNpc5kSEjIE9Osi3V36fy5s2bePPNN+Hl5QUXFxdUq1YNx44ds0uWDTsjMH7ORowd2Bb7Vo5F1fIl0HX4fNxJuG+XPLmRISczKkeGnMyoDDVm9PR0R8/uLfHplIEICx2IqpVLY+acdYi+EYfUtHR88tkaaABMGvcmpk7oi8zMLMz4Yh0MBmG3zIA65/JxMmQE5MmpNI0N71Fpq7WatqbqovLevXto3LgxChQogG3btuHcuXP4/PPPTT7TMj8tWLMHvTs3Qq+ODRFUxhezQ3qgoLMTVm1W9mOOrCVDTmZUjgw5mVEZasxYt1YF1K5RHr4+XvDz9cIb3VrC2dkJl6/exMVL0Yi7k4ghgzuhlL83Svl7Y9jgTrgWeQtnzkXaLTOgzrl8nAwZAXlyku2puqicMWMG/P39sXTpUtSvXx+BgYFo3bo1ypYtm+9Z0jMycfJCNJrXr2gc02q1aFa/IsJP2/eH47/JkJMZlSNDTmZUhgwZDQYD/jhyBmlpGahQriQyMrOg0QAFHB2M+xQo4AiNRoMLl6LtllOGuZQhIyBPTltQ22d/q4Gqi8rNmzejbt266NatG4oXL45atWphyZIldskSn5iMrCwDinm6mYwX83RHXLw+l2flPxlyMqNyZMjJjMpQc8ao6Fi8NehT9Ow/HUuWbcUHI7qhZIliqFC2BHQ6J6xetxtpaRlITUvHyu9/g8EgkJiUbLe8ap7LbDJkBOTJSflD1RfqXLt2DQsXLsTo0aPx0UcfITw8HO+99x6cnJzQp0+fHJ+TlpaGtLQ049ePfxg7EREpy8+3KD6bNhgPHqThSPg5zP96M0I/6o2SJYph9LCu+Gb5NmzbdRQajQaNX6iKwNI+0MjaiiH6P179bU7VRaXBYEDdunUxffp0AECtWrVw5swZLFq0KNeiMiwsDKGhoYpn8SpcCA4OWrOFx3cS9Cju9eSPUMpPMuRkRuXIkJMZlaHmjI6ODvDx9gQAlAn0xdVrt7F151EM7tcONaqVxbxZw6C//wAOWi1cXZ0xaPhseBcrbLe8ap7LbDJkBOTJSflD1W9/+/r6onLlyiZjlSpVQlRUVK7PCQkJQVJSknGLjlZm3Y5TAUfUDPLH/vCLxjGDwYAD4ZdQr1qgIudQggw5mVE5MuRkRmXIkDGbQQhkZGSajLm7FYSrqzPOnIuEXp+CurUr2CmdHHMpQ0ZAnpy2oLHxHxmpulPZuHFjXLx40WTs0qVLCAgIyPU5Op0OOp3OJnmG9GyJIaErUatSKdSuUhoLv9+LlIdp6NVB2c/OtJYMOZlROTLkZEZlqDHjmvW7UbN6ORT18kBqahoOHj6Dcxeu4+MxvQAAew+cRAm/onB3K4hLV25g2aqdaNfmBfj5FrVbZkCdc/k4GTIC8uQk21N1UTlq1Cg0atQI06dPR/fu3XH06FF8/fXX+Prrr+2Sp0vrOribmIzpi39FXPx9VKtQAj/OHaq6Fr8MOZlROTLkZEZlqDFjkv4B5n/9M+4lJqOgiw4B/t74eEwvVK9aBgBw63Y81vywB8nJD1G8aGF06dgE7V5uYLe82dQ4l4+TISMgT06laTWPNlsdW0YaIYR970D7FFu2bEFISAguX76MwMBAjB49GoMGDcrz8/V6PTw8PBAbnwR39+f7G5yIyBq7zsfaO8JTvVTJ294RKJ/o9Xp4e3kgKUldv7+z64qfw6/BtZDb05/wDFKS76NTvTKqe+1Po+pOJQC0b98e7du3t3cMIiIiIiNbrn2UdU2lqi/UISIiIiI5qL5TSURERKQ2vE+lOXYqiYiIiMhq7FQSERERWUgD2619lLRRyU4lEREREVmPnUoiIiIiC/E+lebYqSQiIiIiq7FTSURERGQh3qfSHItKIiIiIgvxlkLm+PY3EREREVmNnUoiIiIiC2lgu1v/SNqoZKeSiIiIiKzHTiURERGRhbTQQGujxY9aSXuV7FQSERERkdXYqSQiIgDAS5W87R3hqR6kZdo7wlMV1PFX638B11SaY6eSiIiIiKzGf04RERERWYqtSjPsVBIRERGR1dipJCIiIrIQP6bRHDuVRERERGQ1diqJiIiILGXDz/6WtFHJTiURERERWY+dSiIiIiIL8eJvc+xUEhEREZHV2KkkIiIishRblWbYqSQiIiIiq7FTSURERGQh3qfSHDuVRERERGQ1diqJiIiILKSx4X0qbXb/Sxtjp9JCS9bvR/WOE+HTeCSC+36GiLPX7R0pRzLkZEblyJCTGZUhQ0ZA/Tlv30nE8CkrUeWVj1C25Ri06j0Dpy5E2TuWGbXPYzZZcpJtqb6oLF26NDQajdk2dOjQfM+yYWcExs/ZiLED22LfyrGoWr4Eug6fjzsJ9/M9y5PIkJMZlSNDTmZUhgwZAfXnTNQ/QOd3v4SjowNWzXobe1eNw8RhneDhVtDe0UyofR6zyZJTaRobbzJSfVEZHh6O27dvG7ddu3YBALp165bvWRas2YPenRuhV8eGCCrji9khPVDQ2QmrNh/O9yxPIkNOZlSODDmZURkyZATUn3PB6t3wK14EX3zUE7UqB6CUnxea1Q9C6RJF7R3NhNrnMZssOcn2VF9UFitWDD4+PsZty5YtKFu2LJo1a5avOdIzMnHyQjSa169oHNNqtWhWvyLCT0fma5YnkSEnMypHhpzMqAwZMgJy5Nz5xxlUD/LH4PFLUb39eLTu9xlWq6wAkmEeAXly2gRblWZUX1T+W3p6OlatWoX+/ftDk8+rWOMTk5GVZUAxTzeT8WKe7oiL1+drlieRISczKkeGnMyoDBkyAnLkjLoVj5Wb/kCgfzGsmf0OendujIlzNmD9tqP2jmYkwzwC8uSk/CHV1d+bNm1CYmIi+vbtm+s+aWlpSEtLM36t1/ObmoiI/mEwCFQP8kfI2+0BAFUrlMTFyNtYuekPdG9b387pSBa8T6U5qTqV3377Ldq2bQs/P79c9wkLC4OHh4dx8/f3V+TcXoULwcFBa7bw+E6CHsW93BU5hxJkyMmMypEhJzMqQ4aMgBw5i3u5o0JpH5OxcgHeuBWbaJ9AOZBhHgF5clL+kKao/Pvvv/Hbb79h4MCBT9wvJCQESUlJxi06OlqR8zsVcETNIH/sD79oHDMYDDgQfgn1qgUqcg4lyJCTGZUjQ05mVIYMGQE5ctarFoirUXEmY9ei76CETxE7JTInwzwC8uS0hez7VNpqk5E0b38vXboUxYsXR7t27Z64n06ng06ns0mGIT1bYkjoStSqVAq1q5TGwu/3IuVhGnp1eMEm53tWMuRkRuXIkJMZlSFDRkD9OQe93hyd3pmDuSt2oUPLmjh5LgqrNx/GzA+72zuaCbXPYzZZcpLtSVFUGgwGLF26FH369IGjo/0id2ldB3cTkzF98a+Ii7+PahVK4Me5Q1XX4pchJzMqR4aczKgMGTIC6s9Zs1IpfDN9AD5dvAVzlu2Av68nQt97FV1a17V3NBNqn8dssuRUmi0v0pa0UQmNEELYO8TT7Ny5E23atMHFixdRoUIFi56r1+vh4eGB2PgkuLs/39/gRETPuwdpmfaO8FQFdVL0a1RPr9fD28sDSUnq+v2dXVccPHsDhdxskyv5vh5NqpRU3Wt/Gim+81u3bg0Jal8iIiKi/ywpikoiIiIiNeEthcxJc/U3EREREakXO5VEREREFrLlrX9kvaUQO5VEREREZDV2KomIiIgsxFsKmWOnkoiIiIisxk4lERERkaXYqjTDTiURERERWY2dSiIiIiIL8T6V5tipJCIiIiKrsVNJREREZCHep9IcO5VEREREZDV2KomIiIgsxIu/zbFTSURERERWY6eSiIikUVCn/l9baRlZ9o6QJ7oCDvaOIDeVtCrDwsKwYcMGXLhwAS4uLmjUqBFmzJiBihUrGvdJTU3F+++/j7Vr1yItLQ1t2rTBggUL4O3trWhsdiqJiIiIJLV//34MHToUR44cwa5du5CRkYHWrVsjJSXFuM+oUaPwyy+/4IcffsD+/ftx69YtdOnSRfEs6v8nHxEREZHKqOU+ldu3bzf5etmyZShevDgiIiLQtGlTJCUl4dtvv8WaNWvQsmVLAMDSpUtRqVIlHDlyBC+88IJiudmpJCIiInpOJCUlAQA8PT0BABEREcjIyEBwcLBxn6CgIJQqVQqHDx9W9NzsVBIRERFZKD/uU6nX603GdToddDpdrs8zGAwYOXIkGjdujKpVqwIAYmJi4OTkhMKFC5vs6+3tjZiYGEVzs1NJREREpEL+/v7w8PAwbmFhYU/cf+jQoThz5gzWrl2bTwlNsVNJREREZKH8uPg7Ojoa7u7uxvEndSmHDRuGLVu24MCBAyhZsqRx3MfHB+np6UhMTDTpVsbGxsLHx0fR3OxUEhEREamQu7u7yZZTUSmEwLBhw7Bx40bs2bMHgYGBJo/XqVMHBQoUwO7du41jFy9eRFRUFBo2bKhoXnYqiYiIiCylkvtUDh06FGvWrMHPP/8MNzc34zpJDw8PuLi4wMPDAwMGDMDo0aPh6ekJd3d3DB8+HA0bNlT0ym+ARSURERGRtBYuXAgAaN68ucn40qVL0bdvXwDAF198Aa1Wi65du5rc/FxpLCqJiIiILKSW+1QKIZ66j7OzM+bPn4/58+dbE+upuKaSiIiIiKzGTiURERGRpWx4n0qbrdW0MXYqiYiIiMhq7FQSERERWUglF3+rCjuVFlqyfj+qd5wIn8YjEdz3M0ScvW7vSDmSISczKkeGnMyoDBkyAnLklCFjtnkrdsGn0QhMmLPB3lFyJNNcKkZj401CLCotsGFnBMbP2YixA9ti38qxqFq+BLoOn487CfftHc2EDDmZUTky5GRGZciQEZAjpwwZs5049zdW/HwIlcv52TtKjmSaS7ItVReVWVlZmDBhAgIDA+Hi4oKyZcti6tSpebp83hYWrNmD3p0boVfHhggq44vZIT1Q0NkJqzYftkue3MiQkxmVI0NOZlSGDBkBOXLKkBEAUh6kYWjoSnw+rgc83AraO06OZJlLpWls/EdGqi4qZ8yYgYULF+Krr77C+fPnMWPGDMycORPz5s3L9yzpGZk4eSEazetXNI5ptVo0q18R4acj8z1PbmTIyYzKkSEnMypDhoyAHDllyJht3Oc/ILhRZTStV/HpO9uBTHNJtqfqovLQoUPo1KkT2rVrh9KlS+O1115D69atcfTo0XzPEp+YjKwsA4p5upmMF/N0R1y8Pt/z5EaGnMyoHBlyMqMyZMgIyJFThowAsGnXcZy+eAMfvdPB3lFyJctc2oJGY9tNRqouKhs1aoTdu3fj0qVLAIBTp07h4MGDaNu2ba7PSUtLg16vN9mIiIhkcjP2HsbP+QkLJr8FZ10Be8chyhNV31Jo3Lhx0Ov1CAoKgoODA7KysvDJJ5+gV69euT4nLCwMoaGhimfxKlwIDg5as4XHdxL0KO7lrvj5npUMOZlROTLkZEZlyJARkCOnDBn/uhCNu/eS8VK/WcaxrCwDjpy8iu9++h1R+z6Hg4P9+0IyzKWt8JZC5uz/HfkE69evx+rVq7FmzRocP34cy5cvx6xZs7B8+fJcnxMSEoKkpCTjFh0drUgWpwKOqBnkj/3hF41jBoMBB8IvoV61QEXOoQQZcjKjcmTIyYzKkCEjIEdOGTK+WLcC9q4ci9+WjTFuNYL80bV1Hfy2bIwqCkpAjrmk/KPqTuWYMWMwbtw49OjRAwBQrVo1/P333wgLC0OfPn1yfI5Op4NOp7NJniE9W2JI6ErUqlQKtauUxsLv9yLlYRp6dXjBJud7VjLkZEblyJCTGZUhQ0ZAjpxqz1jI1RmVypreQqigiw5FPFzNxu1N7XNpM2xVmlF1UfngwQNotab/GnNwcIDBYLBLni6t6+BuYjKmL/4VcfH3Ua1CCfw4d6jqWvwy5GRG5ciQkxmVIUNGQI6cMmSUBeeSsmmEvW76mAd9+/bFb7/9hsWLF6NKlSo4ceIEBg8ejP79+2PGjBl5OoZer4eHhwdi45Pg7s5vcCIisq20jCx7R8gTXQEHe0d4Ir1eD28vDyQlqev3d3ZdcToyDm5utsl1/74e1QKLq+61P42qO5Xz5s3DhAkTMGTIEMTFxcHPzw9vv/02Jk6caO9oRERERPQvqi4q3dzcMGfOHMyZM8feUYiIiIiMNLDd/SQlXVKp7qu/iYiIiEgOqu5UEhEREakRL/42x04lEREREVmNnUoiIiIiC9nyM7r52d9ERERE9J/FTiURERGRxbiq8nHsVBIRERGR1dipJCIiIrIQ11SaY6eSiIiIiKzGTiURERGRhbii0hw7lURERERkNXYqiYiIiCzENZXm2KkkIiIiIquxU0lERERkIc3//9jq2DJiUUlERKQgXQEHe0fIkyL1htk7whOJrHR7RyALsagkIiIishQv/zbDNZVEREREZDV2KomIiIgsxEalORaVRERERBbiLYXM8e1vIiIiIrIaO5VEREREFuIthcyxU0lEREREVmOnkoiIiMhSvFLHDDuVRERERGQ1diqJiIiILMRGpTl2KomIiIjIauxUEhEREVmI96k0x04lEREREVmNnUoiIiIii9nuPpWyrqpkUWmhJev3Y96q3YiL16Nq+RKYMaYb6lQpbe9YZmTIyYzKkSEnMypDhoyAHDmZ8eka1SqL4W8Fo0ZQKfgW80CvD77G1v1/AQAcHbQY/24HvNS4CgJKeEGfnIr9Ry8g9KvNiLmbZHKc1o2rYMzAtqhSzg9p6Zn44/hlvDlmSb69Dsofqn/7+/79+xg5ciQCAgLg4uKCRo0aITw83C5ZNuyMwPg5GzF2YFvsWzkWVcuXQNfh83En4b5d8uRGhpzMqBwZcjKjMmTICMiRkxnzpqCLDmcu3cSYmevMH3N2QvUgf3z27TY0f2sGen+4BOUCvLHm87dN9uvQoiYWhfbGml+O4MVen+LlgbPx445j+fUSbCZ7TaWtNhmpvqgcOHAgdu3ahZUrV+L06dNo3bo1goODcfPmzXzPsmDNHvTu3Ai9OjZEUBlfzA7pgYLOTli1+XC+Z3kSGXIyo3JkyMmMypAhIyBHTmbMm98OncMni7bg131/mT2mT0lFl2FfYdNvJ3Dl7zgcO3MdH362HrUql0JJ7yIAAAcHLcLe74qJczdh6YaDuBoVh4uRMdj024l8ew2Uf1RdVD58+BA//fQTZs6ciaZNm6JcuXKYPHkyypUrh4ULF+ZrlvSMTJy8EI3m9Ssax7RaLZrVr4jw05H5muVJZMjJjMqRISczKkOGjIAcOZnRdtwLucBgMCAp+SEAoEZFf5TwLgKDENi/aizOb/sEP3z5LiqV9bVzUrIFVReVmZmZyMrKgrOzs8m4i4sLDh48mK9Z4hOTkZVlQDFPN5PxYp7uiIvX52uWJ5EhJzMqR4aczKgMGTICcuRkRtvQOTli8rBO+GlnBO6npAIASpcoCgAYN+gVzPp2B3qMWoRE/UP8smgECrsXtGdcsgFVF5Vubm5o2LAhpk6dilu3biErKwurVq3C4cOHcfv27Ryfk5aWBr1eb7IRERGR7Tg6aLE0bAA0Gg3e//Sf9Zda7aPFgZ8v3YFf9p7EqQvRGDplFYQQ6Nyqlr3iKoJrKs2puqgEgJUrV0IIgRIlSkCn02Hu3Ll44403oNXmHD0sLAweHh7Gzd/fX5EcXoULwcFBa7ZA+k6CHsW93BU5hxJkyMmMypEhJzMqQ4aMgBw5mVFZ2QWlv08RvDrsK2OXEoDxKvCL1/5pBKVnZOL6zXiU9PHM96xkW6ovKsuWLYv9+/cjOTkZ0dHROHr0KDIyMlCmTJkc9w8JCUFSUpJxi46OViSHUwFH1Azyx/7wi8Yxg8GAA+GXUK9aoCLnUIIMOZlROTLkZEZlyJARkCMnMyonu6AsW6oYOg/9CveSUkweP3UhGqlpGSgX4G3ynFK+noiOScjvuIrS2PiPjKS5T6WrqytcXV1x79497NixAzNnzsxxP51OB51OZ5MMQ3q2xJDQlahVqRRqVymNhd/vRcrDNPTq8IJNzvesZMjJjMqRISczKkOGjIAcOZkxb1xdnBDoX8z4dYCfF6pWKIHEpAeIuZuE5TMGokaQP3qMWgQHBw2Kez1aA3ov6QEyMrNwPyUVSzccxLjBr+Bm7D1ExyRg+JvBAIBNvx3Pt9dB+UP1ReWOHTsghEDFihVx5coVjBkzBkFBQejXr1++Z+nSug7uJiZj+uJfERd/H9UqlMCPc4eq7q0IGXIyo3JkyMmMypAhIyBHTmbMm5qVArBl8Qjj19NHdwUArNlyBJ9+vRWvNKsOAPh9TYjJ89q//SX+OH4ZADDxy43IzDJgUWhvOOsKIOLs3+g0ZC6S7j/Mp1dhG/zsb3MaIYSwd4gnWb9+PUJCQnDjxg14enqia9eu+OSTT+Dh4ZGn5+v1enh4eCA2Pgnu7ur5YUFERGRPReoNs3eEJxJZ6Ug7vQRJSer6/Z1dV0TH3rNZLr1eD3/vIqp77U+j+k5l9+7d0b17d3vHICIiIjLSwHaf0C1po1L9F+oQERERkfqpvlNJREREpDpsVZphp5KIiIiIrMZOJREREZGFbHk/SVnvU8lOJRERERFZjZ1KIiIiIgvxPpXm2KkkIiIiIquxU0lERERkIV78bY5FJREREZGlWFWa4dvfRERERGQ1FpVEREREFtLY+I+l5s+fj9KlS8PZ2RkNGjTA0aNHbfCqn4xFJREREZHE1q1bh9GjR2PSpEk4fvw4atSogTZt2iAuLi5fc7CoJCIiIrJQ9i2FbLVZYvbs2Rg0aBD69euHypUrY9GiRShYsCC+++4727z4XDz3F+oIIQAA9/V6OychIiJSD5GVbu8IT5SdL/v3uNrobVhXZB/78XPodDrodDqTsfT0dERERCAkJMQ4ptVqERwcjMOHD9ssY06e+6Ly/v37AIBygf52TkJERESWun//Pjw8POwdw8jJyQk+Pj4ob+O6olChQvD3Nz3HpEmTMHnyZJOxu3fvIisrC97e3ibj3t7euHDhgk0zPu65Lyr9/PwQHR0NNzc3aBS6Rb1er4e/vz+io6Ph7u6uyDGVxozKkSEnMypHhpzMqBwZcv5XMwohcP/+ffj5+SlyPKU4OzsjMjIS6em27fQKIczqlse7lGrz3BeVWq0WJUuWtMmx3d3dVfsXPBszKkeGnMyoHBlyMqNyZMj5X8yopg7lvzk7O8PZ2dneMQAARYsWhYODA2JjY03GY2Nj4ePjk69ZeKEOERERkaScnJxQp04d7N692zhmMBiwe/duNGzYMF+zPPedSiIiIqLn2ejRo9GnTx/UrVsX9evXx5w5c5CSkoJ+/frlaw4Wlc9Ap9Nh0qRJql7bwIzKkSEnMypHhpzMqBwZcjIjPc3rr7+OO3fuYOLEiYiJiUHNmjWxfft2s4t3bE0j1HqtPhERERFJg2sqiYiIiMhqLCqJiIiIyGosKomIiIjIaiwqiYiIiMhqLCqJiIiIyGosKvPIYDAgKyvL3jGIcsSbOFjn9u3bOHfunL1jPFX2zyA1//9+8OCBzT++Tgk3btzAiRMn7B1DegaDAQaDwd4xSCVYVObBuXPn0Lt3b7Rp0wbvvvsuDh06ZO9IOXpeil41/8JUk5SUFNy/fx96vV6xz7VXWkJCAi5cuIDLly+rttC4efMmqlWrhvHjx+PYsWP2jpOrkydPonPnznjw4IFq/3+fOXMG3bt3x5EjR5CWlmbvOLk6e/YsGjVqhFWrVgGAKouiGzduYP369diwYQNOnz5t7zg5OnfuHPr27Yvg4GAMHjwYa9eutXcksjMWlU9x8eJFNGrUCFlZWahXrx4OHz6MESNGYO7cufaOZuLSpUuYM2cObt++be8oeXbp0iWMHTsW/fr1w5dffonLly8DADQajWoKy7i4OCQmJto7hplz586hS5cuaNasGSpVqoTVq1cDUFdBfubMGQQHB6N79+6oVq0aZs6cqcp/+Fy+fBlJSUlISkrCvHnzcPz4ceNjapnPU6dOoVGjRqhSpQoKFixoHFdLPuBRofbiiy+iZMmSCAwMVO1NsE+dOoX69evD0dERa9asQVxcHLRadf0qPH36NJo0aYLPPvsMQ4YMwccff4yrV6/aO5aJCxcuoEmTJnByckL79u0RFRWFCRMmYPjw4faORvYkKFcGg0F89NFHonv37sYxvV4vpk2bJmrWrClmzJhhx3T/uHz5svD09BQajUaEhISIO3fu2DvSU509e1Z4eHiIl19+WXTt2lV4eHiI4OBgsWTJEuM+BoPBjgmFOHfunHBychKvvfaaSEpKsmuWfzt79qzw8vISo0aNEqtXrxajR48WBQoUECdOnLB3NKPsjB988IE4e/asmDVrltBoNCIqKsre0czEx8eLjh07isWLF4vatWuLXr16iTNnzgghhMjKyrJzOiFOnTolXF1dxZgxY0zG09LS7JTIXHJysmjdurV49913jWPnz58XJ06cEH///bcdk5k6efKkcHFxER999JG4c+eOqFKlipg2bZowGAx2/3mT7fr166JEiRJi3LhxIjk5WWzdulX4+PiIP//8097RjFJTU0WvXr3Ee++9Zxx7+PChqFWrltBoNOKNN96wYzqyJxaVT9G3b1/RtGlTkzG9Xi9mzZol6tatK1atWmWnZI8kJyeL/v37i759+4r58+cLjUYjxowZo+rCMi0tTbz55pti0KBBxrHLly+L119/Xbzwwgviyy+/tGO6R2JiYkSjRo1Ey5YtRdGiRUW3bt1UUVjGx8eL1q1bm/wwF0KI5s2bi+HDhwsh7F+M37lzRzRt2lSMGDHCOGYwGMTLL78sDh06JE6cOKGa4jIzM1PExcWJChUqiBs3bogNGzaIevXqiUGDBolGjRqJrl272jXf7du3hY+Pj2jTpo0x78iRI0W7du1EUFCQ+OKLL8T58+ftmlGIR0VGkyZNxPHjx0VmZqZo06aNqFevnnBzcxMvvPCC+Oabb+wdUZw6dUrodDrx0UcfCSEe/YPhtddeE/Xq1TPuY++/O0IIsXjxYtG8eXOTLK+88opYvHixWL58udizZ48d0/2jVatWYvLkyUKIRwWlEEJ8+OGHomvXrqJ27dris88+s2c8shN19fxVRPz/baXatWsjKysLFy9eND7m5uaG/v37o1atWliwYAEePHhgr5jQarWoU6cOXn75ZQwZMgRr167FrFmzMHPmTNy9e9duuZ7EyckJsbGxxnVhQgiUK1cOM2fORFBQEH788Uf88ssvds144sQJlC5dGjNmzMCvv/6K3bt3Y+DAgdDr9XbNlZGRgcTERLz22msA/lkLFhgYiISEBACw+3o7jUaDl19+GUOHDjWOTZs2DTt27MCQIUPQoUMHDBo0CAcPHrRjyke0Wi2KFSuGevXq4cyZM3j11VcxefJkbNy4EadPn0b79u3tHRENGzZEfHw8fv75Z7Rv3x6nT59GUFAQWrVqhblz52LWrFmIioqya8bExERcvHgRd+/exZgxYwAA33zzDdavX48XX3wR48ePx48//mjXjGlpafjwww/xySefwGAwQKvVYtq0abh06RIWLlwIwP5/d4BHPw+joqJw8uRJAMAnn3yCbdu24YcffsBXX32FHj16YNmyZXbNl30x1tWrV5GZmQlnZ2fcvHkT69atQ7t27VC5cmVs3brVbhnJjuxb06rflStXRNGiRUX//v3F/fv3hRD//Gs2KipKaDQasW3bNntGFMnJySZfr127Vmg0GvHBBx+Iu3fvCiEe/av82rVr9ohnIjMzU6Snp4t+/fqJ1157TaSmpgqDwWB8m/Hq1auiYcOG4vXXX7drzri4OLF3717j14cPHxaenp6iW7duIjEx0Thuj87GpUuXjP+dnp4uhBBi/Pjx4q233jLZL/v71R70er3xv7///nuh0WjEunXrRHx8vNi/f7+oV6+escuhBr179xbjxo0TQggxYMAAUaRIEVG5cmXR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\n"},"metadata":{}},{"name":"stdout","text":"Per-class metrics:\n    class_label  precision  recall   f1  support\n0            0        1.0     1.0  1.0        6\n1            1        1.0     1.0  1.0        7\n2           10        1.0     1.0  1.0        6\n3           11        1.0     1.0  1.0        7\n4            2        1.0     1.0  1.0       90\n5            3        1.0     1.0  1.0        6\n6            4        1.0     1.0  1.0       26\n7            5        1.0     1.0  1.0       77\n8            6        1.0     1.0  1.0       39\n9            7        1.0     1.0  1.0        6\n10           8        1.0     1.0  1.0        4\n11           9        1.0     1.0  1.0      126\nShowing SHAP summary for class index 4 (2)\nSHAP summary plot saved to artifacts/shap_summary.png\n\nTop feature importances:\n                        1 0.1245\n                        3 0.1093\n                        4 0.0651\n                        6 0.0441\n                        3 0.0378\n                        1 0.0378\n                        8 0.0352\n                        0 0.0343\n                        3 0.0333\n                        2 0.0308\nSaved pipeline, label encoder, metadata in 'artifacts'\n","output_type":"stream"}],"execution_count":39},{"cell_type":"code","source":"def get_pipeline_feature_names(preprocessor, numeric_cols, cat_cols):\n    feature_names = []\n\n    if isinstance(preprocessor, ColumnTransformer):\n        for name, transformer, columns in preprocessor.transformers_:\n            if name == \"num\":\n                # Numeric columns stay the same\n                feature_names.extend(columns)\n            elif name == \"cat\":\n                # Get feature names from one-hot encoder\n                ohe = transformer.named_steps[\"onehot\"]\n                ohe_feature_names = ohe.get_feature_names_out(columns)\n                feature_names.extend(ohe_feature_names)\n            else:\n                # Handle remainder or other transformers\n                if transformer == \"drop\":\n                    continue\n                elif transformer == \"passthrough\":\n                    feature_names.extend(columns)\n                else:\n                    try:\n                        feature_names.extend(columns)\n                    except:\n                        pass\n    return feature_names\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T10:10:28.343840Z","iopub.execute_input":"2025-09-15T10:10:28.344190Z","iopub.status.idle":"2025-09-15T10:10:28.350859Z","shell.execute_reply.started":"2025-09-15T10:10:28.344168Z","shell.execute_reply":"2025-09-15T10:10:28.349706Z"}},"outputs":[],"execution_count":29},{"cell_type":"code","source":"feature_names = get_pipeline_feature_names(\n    pipeline.named_steps[\"preprocessor\"],\n    numeric_cols=numeric_cols,\n    cat_cols=cat_cols\n)\nimportances = pipeline.named_steps[\"classifier\"].feature_importances_\n\n# Ensure length matches\nif len(importances) == len(feature_names):\n    fi_series = pd.Series(importances, index=feature_names).sort_values(ascending=False)\n    print(\"\\nTop 10 Feature Importances:\")\n    print(fi_series.head(10))\nelse:\n    print(\"Mismatch in feature names and importance lengths.\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T10:11:07.346559Z","iopub.execute_input":"2025-09-15T10:11:07.346980Z","iopub.status.idle":"2025-09-15T10:11:07.356789Z","shell.execute_reply.started":"2025-09-15T10:11:07.346951Z","shell.execute_reply":"2025-09-15T10:11:07.355770Z"}},"outputs":[{"name":"stdout","text":"\nTop 10 Feature Importances:\nEmployment_Status_1          0.124468\nNervous_Level_3              0.109307\nNervous_Level_4              0.065128\nNervous_Level_6              0.044117\nEducation_Level_3            0.037822\nHow many times you eat _1    0.037761\nNervous_Level_8              0.035153\nHow many times you eat _0    0.034289\nEmployment_Status_3          0.033284\nNervous_Level_2              0.030766\ndtype: float32\n","output_type":"stream"}],"execution_count":33},{"cell_type":"code","source":"import joblib\nimport json\nimport time\nfrom pathlib import Path\n\n# === Create output directory ===\nOUT_DIR = Path(\"model-3\")\nOUT_DIR.mkdir(exist_ok=True)\n\n# === Save pipeline (preprocessor + SMOTE + classifier) ===\njoblib.dump(pipeline, OUT_DIR / \"depression_pipeline.joblib\")\n\n# === Save label encoder for decoding predictions ===\njoblib.dump(le, OUT_DIR / \"label_encoder.joblib\")\n\n# === Save important metadata ===\nmetadata = {\n    \"timestamp\": time.time(),\n    \"numeric_features\": numeric_cols,\n    \"categorical_features\": cat_cols,\n    \"class_names\": list(le.classes_),\n    \"model_type\": str(type(pipeline.named_steps['classifier'])),\n    \"metrics\": {\n        \"accuracy\": float(acc),\n        \"f1_macro\": float(f1_macro),\n        \"f1_weighted\": float(f1_weighted),\n        \"balanced_accuracy\": float(bal_acc)\n    },\n    \"top_feature_importances\": feature_importances  # if available\n}\n\nwith open(OUT_DIR / \"metadata.json\", \"w\") as f:\n    json.dump(metadata, f, indent=2)\n\nprint(f\"\\n✅ Saved model pipeline, label encoder, and metadata to '{OUT_DIR.resolve()}'\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T10:14:47.578016Z","iopub.execute_input":"2025-09-15T10:14:47.578508Z","iopub.status.idle":"2025-09-15T10:14:47.642252Z","shell.execute_reply.started":"2025-09-15T10:14:47.578475Z","shell.execute_reply":"2025-09-15T10:14:47.641068Z"}},"outputs":[{"name":"stdout","text":"\n✅ Saved model pipeline, label encoder, and metadata to '/kaggle/working/model-3'\n","output_type":"stream"}],"execution_count":34},{"cell_type":"code","source":"import json\nfrom pathlib import Path\n\nMODEL_DIR = Path(\"model-3\")\n\nwith open(MODEL_DIR / \"metadata.json\") as f:\n    metadata = json.load(f)\n\nrequired_columns = metadata[\"numeric_features\"] + metadata[\"categorical_features\"]\nprint(f\"🧾 Model expects {len(required_columns)} columns:\\n{required_columns}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T10:15:58.378355Z","iopub.execute_input":"2025-09-15T10:15:58.378780Z","iopub.status.idle":"2025-09-15T10:15:58.385968Z","shell.execute_reply.started":"2025-09-15T10:15:58.378752Z","shell.execute_reply":"2025-09-15T10:15:58.384955Z"}},"outputs":[{"name":"stdout","text":"🧾 Model expects 17 columns:\n['Your overeating level', 'SocialMedia_Hours', 'Coping_Methods', 'Gender', 'Age', 'Education_Level', 'Employment_Status', 'Low_Energy', 'Low_SelfEsteem', 'Search_Depression_Online', 'Worsening_Depression', 'How many times you eat ', 'SocialMedia_WhileEating', 'Sleep_Hours', 'Nervous_Level', 'Self_Harm', 'Mental_Health_Support']\n","output_type":"stream"}],"execution_count":36},{"cell_type":"code","source":"import pandas as pd\n\n# Replace with actual values based on your understanding of the features\nsample_data = pd.DataFrame([{\n    'Age': 24,\n    'Sleep_Hours': 6.5,\n    'SocialMedia_Hours': 3,\n    'Energy_Level': 2,\n    'Your overeating level': 1,\n    'Coping_Methods': 'Talking to friends',\n    'Gender': 'Male',\n    'Education_Level': 3,\n    'Employment_Status': 1,\n    'Marital_Status': 0,\n    'Nervous_Level': 4,\n    'How many times you eat ': 1\n}])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T10:16:04.097725Z","iopub.execute_input":"2025-09-15T10:16:04.098686Z","iopub.status.idle":"2025-09-15T10:16:04.105586Z","shell.execute_reply.started":"2025-09-15T10:16:04.098645Z","shell.execute_reply":"2025-09-15T10:16:04.104615Z"}},"outputs":[],"execution_count":37},{"cell_type":"code","source":"import joblib\n\npipeline = joblib.load(MODEL_DIR / \"depression_pipeline.joblib\")\nlabel_encoder = joblib.load(MODEL_DIR / \"label_encoder.joblib\")\n\n# Predict\npred = pipeline.predict(sample_data)[0]\npred_label = label_encoder.inverse_transform([pred])[0]\nprobs = pipeline.predict_proba(sample_data)[0]\n\nprint(f\"\\n🧠 Predicted Depression Type: {pred_label}\")\nprint(\"\\n📊 Class Probabilities:\")\nfor cls, prob in zip(label_encoder.classes_, probs):\n    print(f\"  {cls}: {prob:.4f}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T10:16:12.155346Z","iopub.execute_input":"2025-09-15T10:16:12.156630Z","iopub.status.idle":"2025-09-15T10:16:12.251652Z","shell.execute_reply.started":"2025-09-15T10:16:12.156590Z","shell.execute_reply":"2025-09-15T10:16:12.249811Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_283/3136778998.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Predict\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mpred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpipeline\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msample_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0mpred_label\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlabel_encoder\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minverse_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpred\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mprobs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpipeline\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict_proba\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msample_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/pipeline.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, X, **predict_params)\u001b[0m\n\u001b[1;32m    512\u001b[0m         \u001b[0mXt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    513\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtransform\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_iter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mwith_final\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 514\u001b[0;31m             \u001b[0mXt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtransform\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mXt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    515\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msteps\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mXt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mpredict_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    516\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_set_output.py\u001b[0m in \u001b[0;36mwrapped\u001b[0;34m(self, X, *args, **kwargs)\u001b[0m\n\u001b[1;32m    155\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mwraps\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    156\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mwrapped\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 157\u001b[0;31m         \u001b[0mdata_to_wrap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    158\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_to_wrap\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    159\u001b[0m             \u001b[0;31m# only wrap the first output for cross decomposition\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/compose/_column_transformer.py\u001b[0m in \u001b[0;36mtransform\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    825\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_n_features\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreset\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    826\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 827\u001b[0;31m         Xs = self._fit_transform(\n\u001b[0m\u001b[1;32m    828\u001b[0m             \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    829\u001b[0m             \u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/compose/_column_transformer.py\u001b[0m in \u001b[0;36m_fit_transform\u001b[0;34m(self, X, y, func, fitted, column_as_strings)\u001b[0m\n\u001b[1;32m    679\u001b[0m         )\n\u001b[1;32m    680\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 681\u001b[0;31m             return Parallel(n_jobs=self.n_jobs)(\n\u001b[0m\u001b[1;32m    682\u001b[0m                 delayed(func)(\n\u001b[1;32m    683\u001b[0m                     \u001b[0mtransformer\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mclone\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrans\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mfitted\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mtrans\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m     63\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mdelayed_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m \u001b[0;32min\u001b[0m \u001b[0miterable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     64\u001b[0m         )\n\u001b[0;32m---> 65\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterable_with_config\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     66\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     67\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1984\u001b[0m             \u001b[0moutput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_sequential_output\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterable\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1985\u001b[0m             \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1986\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0moutput\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreturn_generator\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1987\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1988\u001b[0m         \u001b[0;31m# Let's create an ID that uniquely identifies the current call. If the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m_get_sequential_output\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1912\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_dispatched_batches\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1913\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_dispatched_tasks\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1914\u001b[0;31m                 \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1915\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_completed_tasks\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1916\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_progress\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    125\u001b[0m             \u001b[0mconfig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    126\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mconfig_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mconfig\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 127\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunction\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/pipeline.py\u001b[0m in \u001b[0;36m_transform_one\u001b[0;34m(transformer, X, y, weight, **fit_params)\u001b[0m\n\u001b[1;32m    938\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    939\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0m_transform_one\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtransformer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mfit_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 940\u001b[0;31m     \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtransformer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    941\u001b[0m     \u001b[0;31m# if we have a weight for this transformer, multiply output\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    942\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mweight\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/pipeline.py\u001b[0m in \u001b[0;36mtransform\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    694\u001b[0m         \u001b[0mXt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    695\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtransform\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_iter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 696\u001b[0;31m             \u001b[0mXt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtransform\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mXt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    697\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mXt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    698\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_set_output.py\u001b[0m in \u001b[0;36mwrapped\u001b[0;34m(self, X, *args, **kwargs)\u001b[0m\n\u001b[1;32m    155\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mwraps\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    156\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mwrapped\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 157\u001b[0;31m         \u001b[0mdata_to_wrap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    158\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_to_wrap\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    159\u001b[0m             \u001b[0;31m# only wrap the first output for cross decomposition\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/impute/_base.py\u001b[0m in \u001b[0;36mtransform\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    528\u001b[0m         \u001b[0mcheck_is_fitted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    529\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 530\u001b[0;31m         \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0min_fit\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    531\u001b[0m         \u001b[0mstatistics\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstatistics_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    532\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/impute/_base.py\u001b[0m in \u001b[0;36m_validate_input\u001b[0;34m(self, X, in_fit)\u001b[0m\n\u001b[1;32m    328\u001b[0m                     )\n\u001b[1;32m    329\u001b[0m                 )\n\u001b[0;32m--> 330\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mnew_ve\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    331\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    332\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mve\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Cannot use median strategy with non-numeric data:\ncould not convert string to float: 'Talking to friends'"],"ename":"ValueError","evalue":"Cannot use median strategy with non-numeric data:\ncould not convert string to float: 'Talking to friends'","output_type":"error"}],"execution_count":38}]}